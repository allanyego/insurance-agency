{"version":3,"sources":["components/PageTitle.js","components/Page.js","util/http/admins.js","util/http/helpers/handleError.js","util/http/constants.js","util/http/helpers/request.js","pages/admins/parts/AuthPage.js","pages/admins/parts/PasswordDetails.js","pages/admins/ChangePassword.js","pages/admins/parts/AdminDetails.js","pages/admins/NewAdminForm.js","pages/admins/parts/LoginDetails.js","pages/admins/Login.js","components/OSider.js","util/titleCase.js","components/OHeader.js","containers/common/Oheader.js","util/http/clients.js","pages/clients/ClientList.js","pages/clients/parts/ClientDetails.js","pages/clients/parts/VehicleDetails.js","pages/clients/parts/PolicyDetails.js","util/http/policies.js","components/Profile.js","containers/common/Subscriptions.js","components/Subscriptions.js","components/ProfileHeader.js","components/ProfileContainer.js","components/ProfileSkeleton.js","pages/clients/parts/ClientProfile.js","containers/clients/parts/ClientProfile.js","pages/clients/Client.js","containers/clients/ClientList.js","containers/clients/NewClientForm.js","pages/clients/NewClientForm.js","util/http/insurers.js","pages/insurers/InsurersList.js","pages/insurers/parts/InsurerProfile.js","containers/insurers/parts/InsurerProfile.js","pages/insurers/Insurer.js","pages/insurers/parts/InsurerDetails.js","containers/insurers/NewInsurer.js","pages/insurers/NewInsurerForm.js","containers/insurers/InsurersList.js","pages/SelectInsurer.js","containers/clients/SelectInsurer.js","containers/admins/NewAdminForm.js","pages/reports/NewApplicationList.js","pages/reports/RenewalApplicationList.js","util/companyConstants.js","pages/reports/DebitNote.js","containers/reports/NewApplicationList.js","containers/reports/RenewalsApplicationList.js","pages/Applications.js","pages/policies/parts/Item.js","pages/policies/parts/VehicleCard.js","pages/policies/parts/InsurerCard.js","containers/policies/parts/PolicyDetails.js","pages/policies/parts/PolicyDetails.js","containers/policies/parts/ClientDetails.js","pages/policies/parts/ClientDetails.js","containers/policies/parts/ApprovalBtn.js","pages/policies/parts/ApprovalBtn.js","pages/policies/parts/PolicyProfile.js","containers/policies/parts/PolicyProfile.js","pages/policies/Policy.js","pages/Main.js","containers/Main.js"],"names":["PageTitle","pageTitle","justify","Title","level","Page","children","style","padding","postAdmin","admin","a","newAdmin","firstName","middleName","lastName","email","idNumber","phoneNumber","addressNumber","addressCode","addressTown","request","url","method","body","headers","Authorization","token","login","password","changePassword","adminId","oldPassword","newPassword","newPasswordConfirm","handleError","error","console","log","store","dispatch","addError","process","NODE_ENV","SERVER_URL","API_URL","query","queryBody","constructUrlBody","requestUrl","fetch","JSON","stringify","resp","json","status","data","message","ulrBody","name","hasOwnProperty","value","toString","encodeURIComponent","replace","push","join","AuthPage","title","src","alt","margin","display","borderRadius","width","marginBottom","PasswordDetails","gutter","span","Item","label","rules","required","Password","pattern","dependencies","hasFeedback","getFieldValue","validator","rule","Promise","resolve","reject","ChangePassword","location","useLocation","useForm","form","useState","loading","setLoading","changeSuccess","setChangeSuccess","submitPassword","validateFields","values","state","resetFields","to","className","type","onClick","nameReg","AdminDetails","NewAdminForm","addSuccess","submitAdmin","LoginDetails","valuePropName","extra","defaultChecked","Login","auth","history","useHistory","loginAdmin","adminLogin","accState","pathname","id","rememberMe","attemptedRoute","Sider","SubMenu","OSider","collapsed","trigger","collapsible","theme","mode","key","UserOutlined","PlusCircleOutlined","DatabaseOutlined","BankOutlined","FileAddOutlined","AuditOutlined","CopyOutlined","DiffOutlined","RedoOutlined","UsergroupAddOutlined","titleCase","str","split","map","s","toUpperCase","Header","connect","user","logout","toggle","justifyContent","alignItems","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","placement","content","block","icon","LogoutOutlined","postClient","client","newClient","kraPin","insurer","occupation","policy","policyNumber","policyPeriod","sumInsured","premiumRate","pvt","excessProtection","antiTheftCoverage","rookie","passengersPllCoverage","policyClass","vehicle","registrationNumber","make","bodyType","bodyColor","manufactureYear","engineNumber","chasisNumber","tonnage","ratingCc","loadClients","search","searchTerm","getById","clientId","Search","ClientDetails","VehicleDetails","YearPicker","Text","PolicyDetails","isForVehicle","setIsForVehicle","startDate","setStartDate","flex","Group","help","disabledDate","currentDate","isBefore","onChange","date","isSameOrBefore","min","event","target","strong","postPolicy","policyDetails","approvePolicy","policyId","approved","getVehicle","Profile","paddingTop","insurerId","subscriptions","policies","filter","p","fallback","onMount","useEffect","length","size","itemLayout","dataSource","renderItem","item","prevPath","Meta","String","CaretRightOutlined","ProfileHeader","fallbackUrl","disabled","marginRight","danger","shape","CloseOutlined","ProfileContainer","props","header","ProfileSkeleton","AddPolicy","PlusOutlined","clients","find","c","Number","updatePolicies","addClient","useParams","loadPolicies","subs","paddingLeft","Date","createdAt","toLocaleDateString","Client","updateClients","term","setTerm","innnerClients","setInnerClients","res","match","i","onSearch","placeholder","enterButton","description","addVehicle","addPolicy","success","wrap","fn","then","Error","postInsurer","rest","loadInsurers","AddClient","marginTop","insurers","addInsurer","Insurer","InsurerDetails","issuer","onSubmit","colon","labelAlign","scrollToFirstError","onFinishFailed","errorFields","updateInsurers","innerInsurers","setInnerInsurers","innerInsures","link","IconText","text","policyHoldersFund","trainingLevy","withholdingTax","co","toFixed","renewalPremium","withHoldingTax","netDue","basicPremium","DebitNote","newApplications","innerPolicies","setInnerPolicies","actions","FireOutlined","CarOutlined","CheckCircleOutlined","InfoCircleFilled","renewalApplications","Applications","path","useRouteMatch","OCard","mouseOver","setMouseOver","onMouseEnter","routerTo","onMouseLeave","fontSize","LinkOutlined","marginLeft","VehicleCard","getFullYear","ColorPad","color","height","backgroundColor","InsurerCard","vehicles","v","updatePolicy","onApprove","dot","ExceptionOutlined","Policy","Content","setCollapsed","minHeight","position","exact","SelectInsurer","NewInsurer"],"mappings":"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","file":"static/js/6.b5696f40.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Row, Typography } from 'antd';\n\nexport default function PageTitle({ pageTitle }) {\n  return(\n    <Row justify=\"center\">\n        <Col>\n          <Typography.Title\n            level={3}>\n              {pageTitle}\n          </Typography.Title>\n        </Col>\n      </Row>\n  );\n}\n","import React from 'react';\n\nimport PageTitle from './PageTitle';\n\nexport default function Page({ pageTitle, children }) {\n  return (\n    <section style={{\n      padding: '2.5em 0 1.5em'\n    }}>\n      {pageTitle &&\n        <PageTitle pageTitle={pageTitle} />\n      }\n      {children}\n    </section>\n  );\n}","import request from './helpers/request';\n\nconst BASE_URL = '/admins';\n\nexport async function postAdmin(admin) {\n  const newAdmin = function (admin) {\n    return {\n      firstName: admin.firstName,\n      middleName: admin.middleName,\n      lastName: admin.lastName,\n      email: admin.email,\n      idNumber: admin.idNumber,\n      phoneNumber: admin.phoneNumber,\n      addressNumber: admin.addressNumber,\n      addressCode: admin.addressCode,\n      addressTown: admin.addressTown,\n    };\n  }(admin);\n\n  return await request({\n    url: `${BASE_URL}/register`,\n    method: 'POST',\n    body: newAdmin,\n    headers: {\n      Authorization: `Bearer ${admin.token}`,\n    }\n  });\n}\n\nexport async function login({\n  email,\n  password\n}) {\n  return await request({\n    url: `${BASE_URL}/login`,\n    method: 'POST',\n    body: {\n      email,\n      password,\n    }\n  });\n}\n\nexport async function changePassword({\n  adminId,\n  oldPassword,\n  newPassword,\n  newPasswordConfirm\n}) {\n  return await request({\n    url: `${BASE_URL}/${adminId}/change-password`,\n    method: 'PUT',\n    body: {\n      oldPassword,\n      newPassword,\n      newPasswordConfirm\n    }\n  });\n}","import store from '../../../redux/store';\nimport { addError } from '../../../redux/actions';\n\nexport default function handleError(error) {\n  console.log('TODO: handle error', error);\n  store.dispatch(addError(error));\n  return null;\n}","const API_URL = 'http://localhost:4000/api/v1';\n\nexport {\n  API_URL\n};","import handleError from './handleError';\nimport { API_URL as api_url } from '../constants';\n\nconst { NODE_ENV, SERVER_URL } = process.env;\nconst API_URL = NODE_ENV === 'production' ? SERVER_URL : api_url;\n\nexport default async function request({\n  url, method, body, query, headers\n}) {\n  try {\n    const queryBody = constructUrlBody(query);\n    const requestUrl = `${API_URL}${url}?${queryBody}`\n    const resp = await fetch(requestUrl, {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers\n      },\n      body: JSON.stringify(body),\n    });\n\n    const { status, data, error } = await resp.json();\n    if (resp.status >= 500) {\n      return handleError(\"Uh oh, something's not right. Try again later.\");\n    }\n\n    if (resp.status >= 400 && error) {\n      return handleError(error);\n    }\n\n    return { status, data, error };\n  } catch (error) {\n    handleError(error.message);\n  }\n}\n\nfunction constructUrlBody(data) {\n  if (!data) {\n    return \"\";\n  }\n\n  let ulrBody = [];\n  for (let name in data) {\n    // skip inherited and functions\n    if (!data.hasOwnProperty(name) || typeof name === 'function') {\n      continue;\n    }\n    let value = data[name];\n    if (!value) {\n      continue; // skip null/undefined\n    }\n    value = value.toString();\n    name = encodeURIComponent(name.replace(' ', '+'));\n    value = encodeURIComponent(value.replace(' ', '+'));\n    ulrBody.push(`${name}=${value}`);\n  }\n\n  return ulrBody.join('&');\n}","import React from 'react';\nimport {\n  Col,\n  Row,\n  Typography,\n} from 'antd';\n\nimport Page from '../../../components/Page';\n\nexport default function AuthPage({title, children}) {\n  return (\n    <Page>\n      <Row justify=\"center\">\n        <Col>\n          <img src=\"orient-logo.png\" alt=\"Company logo\"\n            style={{\n              margin: '0 auto',\n              display: 'block',\n              borderRadius: '10%',\n              width: '75px',\n              marginBottom: '1em',\n            }} />\n          <Typography.Title level={3}>{title}</Typography.Title>\n        </Col>\n      </Row>\n      {children}\n    </Page>\n  );\n}","import React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n} from 'antd';\n\nexport default function PasswordDetails() {\n  return (\n    <Card>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Old password\"\n            name=\"oldPassword\"\n            rules={[\n              { required: true, message: 'Password is required' },\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"New password\"\n            name=\"newPassword\"\n            rules={[\n              { required: true, message: 'Password is required' },\n              { \n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=^.{8,45}$)/,\n                message: `Password should contain numbers, letters and \n                at least 8 characters`\n              }\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Confirm new password\"\n            dependencies={['newPassword']}\n            hasFeedback\n            name=\"newPasswordConfirm\"\n            rules={[\n              { required: true, message: 'Password is required' },\n              ({getFieldValue}) => ({\n                validator(rule, value) {\n                  if (getFieldValue('newPassword') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject('Passwords do not match.');\n                }\n              })\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Button,\n  Col,\n  Form,\n  Row,\n} from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport AuthPage from './parts/AuthPage';\nimport PasswordDetails from './parts/PasswordDetails';\nimport { changePassword } from '../../util/http/admins';\n\nimport '../Form.css';\n\nexport default function ChangePassword({ addError }) {\n  const location = useLocation();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [changeSuccess, setChangeSuccess] = useState(false);\n  const submitPassword = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await changePassword({\n        ...location?.state,\n        ...values,\n      });\n      if (resp && resp.data) {\n        form.resetFields();\n        setChangeSuccess(true);\n      } else if (resp && resp.error) {\n        addError(resp.error);\n      }\n    } catch (error) {\n      console.log('An error occurred', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AuthPage title=\"Change password\">\n      <Row justify=\"center\">\n        <Col span={6}>\n          {changeSuccess ?\n            <div>\n              Password change successful. Proceed to <Link to=\"/login\">login</Link>\n            </div> :\n            <Form className=\"OForm\"\n              form={form}>\n              <PasswordDetails />\n              <Row justify=\"space-between\">\n                <Link to=\"/login\">\n                  <Button type=\"link\">Login</Button>\n                </Link>\n                <Button\n                  type=\"primary\"\n                  onClick={submitPassword}\n                  loading={loading}>\n                  Submit\n              </Button>\n              </Row>\n            </Form>\n          }\n        </Col>\n      </Row>\n    </AuthPage>\n  );\n}","import React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n} from 'antd';\n\nconst nameReg = {\n  pattern: /^[a-zA-Z]{2,}$/,\n  message: 'Invalid value'\n};\n\nexport default function AdminDetails() {\n  return (\n    <Card\n      title=\"Admin details\">\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            name=\"firstName\"\n            label=\"First name\"\n            rules={[\n              {\n                required: true,\n                message: 'First name is required'\n              },\n              nameReg\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            name=\"middleName\"\n            label=\"Middle name\"\n            rules={[\n              nameReg\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            name=\"lastName\"\n            label=\"Last name\"\n            rules={[\n              {\n                required: true,\n                message: 'Last name is required'\n              },\n              nameReg\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Address\"\n            name=\"addressNumber\"\n            rules={[\n              { required: true, message: 'Address number is required' },\n              {\n                pattern: /^[a-zA-Z0-9]{1,}$/,\n                message: 'Address number is invalid'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Postal code\"\n            name=\"addressCode\"\n            rules={[\n              { required: true, message: 'Postal code is required' },\n              {\n                pattern: /^\\d{1,}$/,\n                message: 'Postal code should be a number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Town\"\n            name=\"addressTown\"\n            rules={[\n              { required: true, message: 'Address town is required' },\n              {\n                pattern: /^[a-zA-Z]{2,}$/,\n                message: 'Town name is invalid'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"ID/Passport number\"\n            name=\"idNumber\"\n            rules={[\n              { required: true, message: 'ID number is required' },\n              {\n                pattern: /^[0-9]{1,}$/,\n                message: 'ID/Passport should be a number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              { required: true, message: 'Email is required' },\n              { type: 'email', message: 'Invalid email' }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Phone number\"\n            name=\"phoneNumber\"\n            rules={[\n              { required: true, message: 'Phone number is required' },\n              {\n                pattern: /^0(7\\d{1}|20)\\d{7}$/,\n                message: 'Invalid phone number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Col,\n  Form,\n  Button,\n  Row\n} from 'antd';\n\nimport AdminDetails from './parts/AdminDetails';\nimport Page from '../../components/Page';\n\nimport { postAdmin } from '../../util/http/admins';\n\nimport '../Form.css';\n\nexport default function NewAdminForm({ addSuccess, addError }) {\n  const pageTitle = \"Register new admin\";\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const submitAdmin = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await postAdmin(values);\n      if (resp && resp.data) {\n        addSuccess('Data submitted successfully');\n        form.resetFields();\n      } else if (resp && resp.error) {\n        addError(resp.error);\n      }\n    } catch (error) {\n      addError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Page pageTitle={pageTitle}>\n      <Row justify=\"center\">\n        <Col>\n          <Form className=\"OForm\"\n            form={form}>\n            <AdminDetails />\n            <Button\n              type=\"primary\"\n              onClick={submitAdmin}\n              loading={loading}>\n              Save\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Page>\n  );\n}","import React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Checkbox,\n} from 'antd';\n\nexport default function LoginDetails() {\n  return (\n    <Card>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              { required: true, message: 'Email is required' },\n              { type: 'email', message: 'Invalid email' }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              { required: true, message: 'Password is required' },\n              // { pattern: /^$/, message: 'Password should contain numbers and letters' }\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item\n        name=\"rememberMe\"\n        valuePropName=\"checked\"\n        extra={<span>Remember me</span>}\n        className=\"RememberMeInput\"\n      >\n        <Checkbox defaultChecked={false} />\n      </Form.Item>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Col,\n  Form,\n  Button,\n  Row,\n} from 'antd';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport AuthPage from './parts/AuthPage';\nimport LoginDetails from './parts/LoginDetails';\n\nimport { login as adminLogin } from '../../util/http/admins';\n\nimport '../Form.css';\n\nexport default function Login({ login, addError, auth }) {\n  const history = useHistory();\n  const location = useLocation();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const loginAdmin = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await adminLogin(values);\n      if (resp && resp.error) {\n        if (resp.error?.accState === 'NEEDS_RESET') {\n          addError('You need to change your password');\n          history.push({\n            pathname: '/change-password',\n            state: {\n              adminId: resp.error.id\n            }\n          });\n        } else {\n          addError(resp.error);\n        }\n      } else if (resp && resp.data) {\n        form.resetFields();\n        login({\n          rememberMe: values.rememberMe,\n          ...resp.data\n        });\n        history.push(location?.state?.attemptedRoute || '/app');\n      }\n    } catch (error) {\n      console.log('An error occurred', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!!auth?.token) {\n    return <Redirect to=\"/app\" />\n  }\n\n  return (\n    <AuthPage title=\"Admin login\">\n      <Row justify=\"center\">\n        <Col span={6}>\n          <Form className=\"OForm\"\n            form={form}>\n            <LoginDetails />\n            <Button\n              type=\"primary\"\n              onClick={loginAdmin}\n              loading={loading}>\n              Log in\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </AuthPage>\n  );\n}","import React from 'react';\nimport { Layout, Menu, Divider } from 'antd';\nimport {\n  AuditOutlined,\n  BankOutlined,\n  CopyOutlined,\n  DatabaseOutlined,\n  DiffOutlined,\n  FileAddOutlined,\n  PlusCircleOutlined,\n  RedoOutlined,\n  UserOutlined,\n  UsergroupAddOutlined\n} from '@ant-design/icons';\n\nimport './Osider.css';\nimport { Link } from 'react-router-dom';\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default function OSider({ collapsed }) {\n  return (\n    <Sider trigger={null} collapsible collapsed={collapsed}>\n      <div className=\"logo\">\n        <img src=\"/orient-logo.png\" alt=\"Company logo\" />\n      </div>\n      <Menu theme=\"dark\" mode=\"inline\"\n        // defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']}\n      >\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <UserOutlined />\n              <span>Clients</span>\n            </span>\n          }>\n          <Menu.Item key=\"1\">\n            <Link to=\"/app/clients/new\">\n              <PlusCircleOutlined />\n              <span>New client</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Link to=\"/app/clients\">\n              <DatabaseOutlined />\n              <span>List clients</span>\n            </Link>\n          </Menu.Item>\n        </SubMenu>\n\n        <SubMenu\n          key=\"sub2\"\n          title={\n            <span>\n              <BankOutlined />\n              <span>Issuers</span>\n            </span>\n          }>\n          <Menu.Item key=\"3\">\n            <Link to=\"/app/insurers/new\">\n              <FileAddOutlined />\n              <span>New issuer</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\">\n            <Link to=\"/app/insurers\">\n              <AuditOutlined />\n              <span>List issuers</span>\n            </Link>\n          </Menu.Item>\n        </SubMenu>\n\n        <SubMenu\n          key=\"sub3\"\n          title={\n            <span>\n              <CopyOutlined />\n              <span>Reports</span>\n            </span>\n          }>\n          <Menu.Item key=\"5\">\n            <Link to=\"/app/reports/applications/new\">\n              <DiffOutlined />\n              <span>New applications</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"6\">\n            <Link to=\"/app/reports/applications/renewals\">\n              <RedoOutlined />\n              <span>Renewal applications</span>\n            </Link>\n          </Menu.Item>\n        </SubMenu>\n        <Divider />\n        <Menu.Item key=\"7\">\n          <Link to=\"/app/admins/new\">\n            <UsergroupAddOutlined />\n            <span>Add admin</span>\n          </Link>\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  );\n}","const titleCase = (str) => {\n  str = str.split(\" \")\n  return str.map(s => {\n      s = s.split(\"\")\n      s[0] = s[0].toUpperCase()\n      return s.join('')\n  }).join(\" \")\n};\n\nexport default titleCase;","import React from 'react';\nimport { Layout, Popover, Button } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  LogoutOutlined,\n} from '@ant-design/icons';\n\nimport titleCase from '../util/titleCase';\nimport { useHistory } from 'react-router-dom';\n\nconst { Header } = Layout;\n\nexport default function OHeader({ collapsed, toggle, logout, user }) {\n  const history = useHistory();\n  const onLogout = () => {\n    logout();\n    history.push('/login');\n  };\n\n  return (\n    <Header className=\"site-layout-background\" style={{\n      display: 'flex',\n      padding: '0 3em 0 0',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    }}>\n      {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n        className: 'trigger',\n        onClick: toggle,\n      })}\n      <Popover\n        trigger=\"click\"\n        placement=\"bottomRight\"\n        title={titleCase(`${user.firstName} ${user.lastName}`)}\n        content={\n          <Button\n            block={true}\n            icon={<LogoutOutlined />}\n            type=\"danger\"\n            onClick={onLogout}\n          >Logout</Button>\n        }\n      >\n        {React.createElement(UserOutlined)}\n      </Popover>\n    </Header>\n  );\n}","import { connect } from 'react-redux';\n\nimport OHeader from '../../components/OHeader';\nimport { logout } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  user: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(logout()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OHeader);","import request from './helpers/request';\n\nconst BASE_URL = '/clients';\n\nexport async function postClient(client) {\n  const newClient = function (client) {\n    return {\n      firstName: client.firstName,\n      middleName: client.middleName,\n      lastName: client.lastName,\n      email: client.email,\n      idNumber: client.idNumber,\n      phoneNumber: client.phoneNumber,\n      addressNumber: client.addressNumber,\n      addressCode: client.addressCode,\n      addressTown: client.addressTown,\n      kraPin: client.kraPin,\n      insurer: client.insurer,\n      occupation: client.occupation,\n    };\n  }(client);\n\n  const policy = function (client) {\n    return {\n      policyNumber: client.policyNumber,\n      policyPeriod: client.policyPeriod,\n      sumInsured: client.sumInsured,\n      premiumRate: client.premiumRate,\n      pvt: client.pvt,\n      excessProtection: client.excessProtection,\n      antiTheftCoverage: client.antiTheftCoverage,\n      rookie: client.rookie,\n      passengersPllCoverage: client.passengersPllCoverage,\n      policyClass: client.policyClass,\n    };\n  }(client);\n\n  if (policy.policyClass === 'vehicle') {\n    policy.vehicle = function (client) {\n      return {\n        registrationNumber: client.registrationNumber,\n        make: client.make,\n        bodyType: client.bodyType,\n        bodyColor: client.bodyColor,\n        manufactureYear: client.manufactureYear,\n        engineNumber: client.engineNumber,\n        chasisNumber: client.chasisNumber,\n        tonnage: client.tonnage,\n        ratingCc: client.ratingCc,\n      };\n    }(client);\n  }\n\n  return await request({\n    url: BASE_URL,\n    method: 'POST',\n    body: { policy, ...newClient },\n    headers: {\n      Authorization: `Bearer ${client.token}`,\n    }\n  });\n}\n\nexport async function loadClients() {\n  return await request({\n    url: BASE_URL,\n    method: 'GET',\n  });\n}\n\nexport async function search(searchTerm) {\n  return await request({\n    url: BASE_URL,\n    method: 'GET',\n    query: {\n      search: searchTerm\n    }\n  });\n}\n\nexport async function getById({\n  clientId\n}) {\n  return await request({\n    url: `${BASE_URL}/${clientId}`,\n    method: 'GET',\n  });\n}","import React, { useState, useEffect } from 'react';\nimport {\n  Col,\n  List,\n  Row,\n  Input,\n} from 'antd';\nimport { CaretRightOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Page from '../../components/Page';\nimport { search, loadClients } from '../../util/http/clients';\nimport titleCase from '../../util/titleCase';\n\nconst { Search } = Input;\n\nexport default function ClientList({ clients, updateClients }) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  const [innnerClients, setInnerClients] = useState(clients);\n\n  useEffect(() => {\n    if (clients.length < 20) {\n      try {\n        (async () => {\n          const res = await loadClients();\n          if (!res) {\n            return\n          };\n          \n          updateClients(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR clients', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ?\n      clients.filter(i => {\n        return i.firstName.match(term) || i.lastName.match(term) ||\n          i.middleName.match(term)\n      }) :\n      clients;\n    setInnerClients(match);\n  }, [term, clients]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n\n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updateClients(resp.data);\n    }\n  };\n  return (\n    <Page pageTitle=\"Clients\">\n      <Row justify=\"center\">\n        <Col flex=\"auto\">\n          <Row justify=\"center\">\n            <Col span={14}>\n              <Search placeholder=\"client name\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={20}>\n              <List\n                itemLayout=\"horizontal\"\n                dataSource={innnerClients}\n                renderItem={item => {\n                  const { firstName, lastName } = item;\n                  return (\n                    <Link to={{\n                      pathname: `/app/clients/${item.id}`,\n                      state: {\n                        prevPath: location.pathname\n                      }\n                    }}>\n                      <List.Item>\n                        <List.Item.Meta\n                          title={titleCase(`${firstName} ${lastName}`)}\n                          description={\n                            \"Member since \" +\n                            new Date(item.createdAt).toLocaleDateString()\n                          }\n                        />\n                        <div>\n                          <CaretRightOutlined />\n                        </div>\n                      </List.Item>\n                    </Link>\n                  );\n                }}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n","import React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n} from 'antd';\n\nconst nameReg = {\n  pattern: /^[a-zA-Z]{2,}$/,\n  message: 'Invalid value'\n};\n\nexport default function ClientDetails() {\n  return (\n    <Card\n      title=\"Client details\">\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            name=\"firstName\"\n            label=\"First name\"\n            rules={[\n              {\n                required: true,\n                message: 'First name is required'\n              },\n              nameReg\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            name=\"middleName\"\n            label=\"Middle name\"\n            rules={[\n              nameReg\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            name=\"lastName\"\n            label=\"Last name\"\n            rules={[\n              {\n                required: true,\n                message: 'Last name is required'\n              },\n              nameReg\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Address\"\n            name=\"addressNumber\"\n            rules={[\n              { required: true, message: 'Address number is required' },\n              {\n                pattern: /^[a-zA-Z0-9]{1,}$/,\n                message: 'Address number is invalid'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Postal code\"\n            name=\"addressCode\"\n            rules={[\n              { required: true, message: 'Postal code is required' },\n              {\n                pattern: /^\\d{1,}$/,\n                message: 'Postal code should be a number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Town\"\n            name=\"addressTown\"\n            rules={[\n              { required: true, message: 'Address town is required' },\n              {\n                pattern: /^[a-zA-Z]{2,}$/,\n                message: 'Town name is invalid'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"ID/Passport number\"\n            name=\"idNumber\"\n            rules={[\n              { required: true, message: 'ID number is required' },\n              {\n                pattern: /^[0-9]{1,}$/,\n                message: 'ID/Passport should be a number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              { required: true, message: 'Email is required' },\n              { type: 'email', message: 'Invalid email' }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Phone number\"\n            name=\"phoneNumber\"\n            rules={[\n              { required: true, message: 'Phone number is required' },\n              {\n                pattern: /^0(7\\d{1}|20)\\d{7}$/,\n                message: 'Invalid phone number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Occupation\"\n            name=\"occupation\"\n            rules={[\n              { required: true, message: 'Occupation is required' },\n              {\n                pattern: /^[a-zA-Z]{2,}$/,\n                message: 'Occupation should be a string'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"KRA pin\"\n            name=\"kraPin\"\n            rules={[\n              { required: true, message: 'KRA pin is required' },\n              {\n                pattern: /^[a-zA-Z0-9]{11}$/,\n                message: 'KRA Pin should be 11 characters'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n  );\n}","import React from 'react';\nimport {\n  Card,\n  Col,\n  DatePicker,\n  Form,\n  Input,\n  Row,\n} from 'antd';\n\nexport default function VehicleDetails() {\n  return (\n    <Card\n      title=\"Vehicle details\">\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Registration number\"\n            name=\"registrationNumber\"\n            rules={[\n              { required: true, message: 'Vehicle registration no is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Make\"\n            name=\"make\"\n            rules={[\n              { required: true, message: 'Vehicle make is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Body type\"\n            name=\"bodyType\"\n            rules={[\n              { required: true, message: 'Vehicle body type is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Body color\"\n            name=\"bodyColor\"\n            rules={[\n              { required: true, message: 'Vehicle body color is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Chasis number\"\n            name=\"chasisNumber\"\n            rules={[\n              { required: true, message: 'Vehicle chasis number is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Engine number\"\n            name=\"engineNumber\"\n            rules={[\n              { required: true, message: 'Vehicle body type is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Rating (cc)\"\n            name=\"ratingCc\"\n            rules={[\n              { required: true, message: 'Vehicle rating (cc) is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Tonnage\"\n            name=\"tonnage\"\n            rules={[\n              { required: true, message: 'Vehicle tonnage is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Year of manufacture\"\n            name=\"manufactureYear\"\n            rules={[\n              { required: true, message: 'Vehicle year of manufacture is required' }\n            ]}\n          >\n            <DatePicker.YearPicker />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n\n  );\n}","import React, { useState } from 'react';\nimport {\n  Card,\n  Col,\n  Divider,\n  Form,\n  Input,\n  Row,\n  DatePicker,\n  Checkbox,\n  InputNumber,\n  Typography,\n  Radio\n} from 'antd';\n\nimport VehicleDetails from './VehicleDetails';\n\nconst { Text } = Typography\n\nexport default function PolicyDetails() {\n  const [isForVehicle, setIsForVehicle] = useState(false);\n  const [startDate, setStartDate] = useState(null);\n\n  const onClassChange = (event) => {\n    const { value } = event.target;\n    if (value === 'fire') {\n      return setIsForVehicle(false);\n    }\n    setIsForVehicle(true);\n  };\n\n  const onPeriodStartChange = date => setStartDate(date);\n\n  const restrictEndDate = (currentDate) => {\n    if (startDate) {\n      return currentDate.isSameOrBefore(startDate);\n    } \n    return currentDate.isSameOrBefore();\n  };\n\n  return (\n    <Card\n      title=\"Policy details\">\n      <Row gutter={16}>\n        <Col flex=\"auto\">\n          <Form.Item\n            label=\"Policy number\"\n            name=\"policyNumber\"\n            rules={[\n              { required: true, message: 'Policy number is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col flex=\"auto\">\n          <Form.Item\n            label=\"Policy Period\"\n          >\n            <Input.Group>\n              <Form.Item\n                name={['policyPeriod', 'start']}\n                help=\"Select start date\"\n                rules={[{ required: true, message: 'Start date required' }]}>\n                <DatePicker\n                  disabledDate={(currentDate) => currentDate.isBefore()}\n                  onChange={onPeriodStartChange} />\n              </Form.Item>\n              <Form.Item\n                name={['policyPeriod', 'end']}\n                help=\"Select end date\"\n                rules={[{ required: true, message: 'End date required' }]}>\n                <DatePicker\n                  disabledDate={restrictEndDate} />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n        </Col>\n        <Col flex=\"auto\">\n          <Form.Item\n            label=\"Sum insured\"\n            name=\"sumInsured\"\n            rules={[\n              { required: true, message: 'Sum is required' },\n            ]}\n          >\n            <InputNumber min={1} />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col flex=\"auto\">\n          <Form.Item\n            label=\"PVT\"\n            name=\"pvt\"\n            rules={[\n              { required: true, message: 'PVT is required' },\n            ]}\n          >\n            <InputNumber min={1} />\n          </Form.Item>\n        </Col>\n        <Col flex=\"auto\">\n          <Form.Item\n            label=\"Premium rate\"\n            name=\"premiumRate\"\n            rules={[\n              { required: true, message: 'Premium rate is required' },\n            ]}\n          >\n            <InputNumber min={1} />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n        <Form.Item\n          label=\"Select the insurance class\"\n          name=\"policyClass\"\n          rules={[\n            { required: true, message: 'Please select policy class' }\n          ]}>\n          <Radio.Group onChange={onClassChange}>\n            <Radio value={\"fire\"}>Fire</Radio>\n            <Radio value={\"vehicle\"}>Vehicle</Radio>\n          </Radio.Group>\n        </Form.Item>\n      </Row>\n      {isForVehicle &&\n        <div>\n          <Divider />\n          <VehicleDetails />\n          <Text strong style={{ marginBottom: '0.7em' }}>Extension</Text>\n          <Row className=\"OFormRow\">\n            <Col span={12}>\n              <Form.Item\n                help=\"5% with a min of Kshs30,000/=\"\n                label=\"Add excess protection\"\n                name=\"excessProtection\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox defaultChecked={false} />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                help=\"+ Kshs5000\"\n                label=\"Young/New drivers\"\n                name=\"rookie\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox defaultChecked={false} />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"Passengers (PLL)\"\n                name=\"passengersPllCoverage\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox defaultChecked={false} />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                help=\"10% antitheft device, 20% no device\"\n                label=\"Theft\"\n                name=\"antiTheftCoverage\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox defaultChecked={false} />\n              </Form.Item>\n            </Col>\n          </Row>\n        </div>\n      }\n      {/* <Divider />\n\n      <section className=\"OExtContainer\">\n        <div>Windscreen</div>\n        <div>\n          <Text strong>0.00</Text>\n        </div>\n        <div>RADIO</div>\n        <div>\n          <Text strong>0.00</Text>\n        </div>\n\n      </section> */}\n    </Card>\n\n  );\n}","import request from './helpers/request';\n\nconst BASE_URL = '/policies';\n\nexport async function postPolicy(policy) {\n  const policyDetails = function (policy) {\n    return {\n      insurer: policy.insurer,\n      client: policy.client,\n      policyNumber: policy.policyNumber,\n      policyPeriod: policy.policyPeriod,\n      sumInsured: policy.sumInsured,\n      premiumRate: policy.premiumRate,\n      pvt: policy.pvt,\n      excessProtection: policy.excessProtection,\n      antiTheftCoverage: policy.antiTheftCoverage,\n      rookie: policy.rookie,\n      passengersPllCoverage: policy.passengersPllCoverage,\n      policyClass: policy.policyClass,\n    };\n  }(policy);\n\n  if (policyDetails.policyClass === 'vehicle') {\n    policyDetails.vehicle = function (policy) {\n      return {\n        registrationNumber: policy.registrationNumber,\n        make: policy.make,\n        bodyType: policy.bodyType,\n        bodyColor: policy.bodyColor,\n        manufactureYear: policy.manufactureYear,\n        engineNumber: policy.engineNumber,\n        chasisNumber: policy.chasisNumber,\n        tonnage: policy.tonnage,\n        ratingCc: policy.ratingCc,\n      };\n    }(policy);\n  }\n\n  return await request({\n    url: BASE_URL,\n    method: 'POST',\n    body: policyDetails,\n    headers: {\n      Authorization: `Bearer ${policy.token}`,\n    }\n  });\n}\n\nexport async function approvePolicy({ policyId, token }) {\n  return await request({\n    url: `${BASE_URL}/${policyId}`,\n    method: 'PUT',\n    body: { approved: true },\n    headers: {\n      Authorization: `Bearer ${token}`,\n    }\n  });\n}\n\nexport async function search({\n  policyNumber,\n  client,\n  insurer,\n  type\n}) {\n  return await request({\n    url: BASE_URL,\n    method: 'GET',\n    query: {\n      search: policyNumber,\n      client,\n      insurer,\n      type\n    }\n  });\n}\n\nexport async function getById({\n  policyId\n}) {\n  return await request({\n    url: `${BASE_URL}/${policyId}`,\n    method: 'GET',\n  });\n}\n\nexport async function getVehicle({\n  policyId\n}) {\n  return await request({\n    url: `${BASE_URL}/${policyId}/vehicle`,\n    method: 'GET',\n  });\n}","import React from 'react';\n\nimport './Overlay.css';\nimport { Row, Card, Col } from 'antd';\n\nexport default function Profile({ children }) {\n  return (\n    <Row justify=\"center\" style={{\n      paddingTop: '2em'\n    }}>\n      <Col span={18}>\n        <Card>\n          {children}\n        </Card>\n      </Col>\n    </Row>\n  );\n}","import { connect } from 'react-redux';\n\nimport Subscriptions from '../../components/Subscriptions';\n\nconst mapStateToProps = (state, { clientId, insurerId }) => {\n  if (clientId != null) {\n    return {\n      subscriptions: state.policies.filter(p => p.client === clientId)\n    }\n  }\n  return {\n    subscriptions: state.policies.filter(p => p.insurer === insurerId)\n  }\n};\n\nexport default connect(\n  mapStateToProps\n)(Subscriptions);","import React, { useEffect } from 'react';\nimport { Card, List } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CaretRightOutlined } from '@ant-design/icons';\n\nexport default function Subscriptions({ \n  subscriptions,\n  fallback,\n  extra = () => { },\n  onMount,\n}) {\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      await onMount(subscriptions);\n    })()\n  }, []);\n\n  if (!subscriptions.length && fallback) {\n    return (\n      <div>\n        {extra()}\n        {fallback()}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {extra()}\n      <Card title=\"Subscriptions\">\n        <List\n          size=\"small\"\n          itemLayout=\"horizontal\"\n          dataSource={subscriptions}\n          renderItem={item => (\n            <Link to={{\n              pathname: `/app/policies/${item.id}`,\n              state: {\n                prevPath: location.pathname\n              }\n            }}>\n              <List.Item>\n                <List.Item.Meta\n                  title={String(item.policyNumber).toUpperCase()}\n                />\n                <div>\n                  <CaretRightOutlined />\n                </div>\n              </List.Item>\n            </Link>\n          )}\n        />\n      </Card>\n    </div>\n  );\n}","import React from 'react';\nimport { Row, Col, Typography, Button } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst { Text, Title } = Typography;\n\nexport default function ProfileHeader({ label, title, fallbackUrl }) {\n  const history = useHistory();\n  const location = useLocation();\n  const onClose = () => history.push(location?.state?.prevPath || fallbackUrl);\n\n  return (\n    <Row>\n      <Col flex=\"auto\"\n        style={{\n          display: 'flex',\n          alignItems: 'center'\n        }}>\n        <Text disabled\n          style={{\n            display: 'block',\n            marginRight: '0.5em'\n          }}>{label}:</Text>\n        <Title level={3}\n          style={{\n            display: 'block'\n          }}>{title}</Title>\n      </Col>\n      <Col\n        style={{\n          display: 'flex',\n          alignItems: 'center'\n        }}>\n        <Button\n          danger\n          size=\"small\"\n          shape=\"circle\" icon={<CloseOutlined />}\n          onClick={onClose} />\n      </Col>\n    </Row>\n  );\n}","import React from 'react';\n\nimport ProfileHeader from './ProfileHeader';\n\nexport default function ProfileContainer(props) {\n  const header = props.header || true;\n  return (\n    <div>\n      {header &&\n        <ProfileHeader {...props} />\n      }\n      {props.children}\n    </div>\n  );\n}","import React from 'react';\n\nimport ProfileContainer from \"./ProfileContainer\";\n\nimport './ProfileSkeleton.css';\n\nexport default function ProfileSkeleton() {\n  return (\n    <ProfileContainer header={false}>\n      <div className=\"ProfileSkeleton\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </ProfileContainer>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport {\n  Col,\n  Row,\n  Typography,\n  Button\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nimport Subscriptions from '../../../containers/common/Subscriptions';\nimport ProfileContainer from '../../../components/ProfileContainer';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { search } from '../../../util/http/policies';\nimport { getById } from '../../../util/http/clients';\nimport ProfileSkeleton from '../../../components/ProfileSkeleton';\nimport titleCase from '../../../util/titleCase';\n\nconst { Text } = Typography;\n\nexport default function ClientProfile({ client, updatePolicies, addClient }) {\n  const { clientId } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    (async () => {\n      if (!client) {\n        const resp = await getById({\n          clientId\n        });\n        \n        if (resp && resp.data) {\n          addClient(resp.data);\n        } else {\n          history.replace('/clients');\n        }\n      }\n    })();\n  }, [client]);\n\n  const loadPolicies = async (subs) => {\n    if (subs.length <= 2) {\n      const resp = await search({\n        client: client.id\n      });\n\n      if (resp && resp.data) {\n        updatePolicies(resp.data);\n      }\n    }\n  };\n\n  if (!client) {\n    return (\n      <ProfileSkeleton />\n    );\n  }\n\n  return (\n    <ProfileContainer\n      label=\"Client name\"\n      title={titleCase(`${client.firstName} ${client.lastName}`)}\n      fallbackUrl=\"/app/clients\">\n      <div style={{\n        paddingLeft: '1em',\n        marginBottom: '1.5em',\n      }}>\n        <Row>\n          <Col span={5}>\n            <Text>ID No</Text>\n          </Col>\n          <Col flex>\n            <Text strong>{client.idNumber}</Text>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={5}>\n            <Text>Address</Text>\n          </Col>\n          <Col flex>\n            <Text strong>\n              {titleCase(`${client.addressNumber} ` +\n                `${client.addressTown}, ${client.addressCode}`)}\n            </Text>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={5}>\n            <Text>Occupation</Text>\n          </Col>\n          <Col flex>\n            <Text strong>{titleCase(client.occupation)}</Text>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={5}>\n            <Text>Phone</Text>\n          </Col>\n          <Col flex>\n            <Text strong>{client.phoneNumber}</Text>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={5}>\n            <Text>Email</Text>\n          </Col>\n          <Col flex>\n            <Text strong>{client.email}</Text>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={5}>\n            <Text>Member since</Text>\n          </Col>\n          <Col flex>\n            <Text strong>\n              {new Date(client.createdAt).toLocaleDateString()}\n            </Text>\n          </Col>\n        </Row>\n      </div>\n      <Subscriptions clientId={client.id}\n        extra={() => <AddPolicy client={client} />}\n        onMount={loadPolicies}\n      />\n    </ProfileContainer>\n  );\n}\n\nfunction AddPolicy({ client }) {\n  return (\n    <Row justify=\"center\"\n      style={{\n        margin: '2em auto 2em'\n      }}>\n      <Col>\n        <Text\n          style={{\n            marginRight: '1em'\n          }}\n          strong>\n          Add new policy for client\n          </Text>\n        <Link to={{\n          pathname: \"/app/clients/new\",\n          state: {\n            clientId: client.id\n          }\n        }}>\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<PlusOutlined />} />\n        </Link>\n      </Col>\n    </Row>\n  );\n}","import { connect } from 'react-redux';\n\nimport ClientProfile from '../../../pages/clients/parts/ClientProfile';\nimport { updatePolicies, addClient } from '../../../redux/actions';\n\nconst mapStateToProp = (state, {clientId}) => ({\n  client: state.clients.find(c => Number(c.id) === Number(clientId))\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicies: (policies) => dispatch(updatePolicies(policies)),\n  addClient: (client) => dispatch(addClient(client))\n});\n\nexport default connect(\n  mapStateToProp,\n  mapDispatchToProps\n)(ClientProfile);","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Profile from '../../components/Profile';\nimport ClientProfile from '../../containers/clients/parts/ClientProfile';\n\nexport default function Client({ clients }) {\n  const { clientId } = useParams();\n\n  return (\n    <Profile>\n      <ClientProfile clientId={clientId} />\n    </Profile>\n  );\n}","import { connect } from 'react-redux';\n\nimport { ClientList } from '../../pages/clients';\nimport { updateClients } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  clients: state.clients\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateClients: (clients) => dispatch(updateClients(clients))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientList);","import { connect } from 'react-redux'\n\nimport { NewClientForm } from \"../../pages/clients\";\nimport {\n  addClient, addVehicle, addPolicy, addSuccess, addError\n} from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  token: state.auth.token\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addClient(client) {\n    dispatch(addClient(client));\n  },\n  addVehicle(vehicle) {\n    dispatch(addVehicle(vehicle));\n  },\n  addPolicy(policy) {\n    dispatch(addPolicy(policy));\n  },\n  addSuccess(success) {\n    dispatch(addSuccess(success));\n  },\n  addError: error => dispatch(addError(error))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewClientForm);","import React, { useState } from 'react';\nimport {\n  Col,\n  Form,\n  Button,\n  Row\n} from 'antd';\nimport { useParams, useLocation } from 'react-router-dom';\n\nimport ClientDetails from './parts/ClientDetails';\nimport PolicyDetails from './parts/PolicyDetails';\n\nimport Page from '../../components/Page';\n\nimport { postClient } from '../../util/http/clients';\nimport { postPolicy } from '../../util/http/policies';\n\nimport '../Form.css';\n\nexport default function NewClientForm({\n  addClient,\n  addPolicy,\n  addVehicle,\n  addSuccess,\n  addError,\n  token\n}) {\n  const { insurerId } = useParams();\n  const location = useLocation();\n  const clientId = location?.state?.clientId;\n  const pageTitle = clientId ? \"Add policy for client\" : \"Register new client\";\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const wrap = (fn) => {\n    setLoading(true);\n    try {\n      fn().then(() => {\n        addSuccess('Data submitted successfully');\n        form.resetFields();\n      });\n    } catch (error) {\n      addError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const submitClient = () => {\n    wrap(async function wrapped() {\n      const values = await form.validateFields();\n      const resp = await postClient({\n        insurer: insurerId,\n        token,\n        ...values,\n      });\n      if (resp && resp.data) {\n        const { policy, ...client } = resp.data;\n        addClient(client);\n        const { vehicle, ...policyDetails } = policy;\n        addPolicy(policyDetails);\n        !!vehicle && addVehicle(vehicle);\n      } else if (resp && resp.error) {\n        throw Error(resp.error);\n      }\n    });\n  };\n\n  const submitPolicy = () => {\n    wrap(async function wrapped() {\n      const values = await form.validateFields();\n      const resp = await postPolicy({\n        insurer: insurerId,\n        client: clientId,\n        token,\n        ...values,\n      });\n      if (resp && resp.data) {\n        const { vehicle, ...policyDetails } = resp.data;\n        addPolicy(policyDetails);\n        !!vehicle && addVehicle(vehicle);\n      } else if (resp && resp.error) {\n        throw Error(resp.error);\n      }\n    });\n  };\n\n  return (\n    <Page pageTitle={pageTitle}>\n      <Row justify=\"center\">\n        <Col>\n          <Form className=\"OForm\"\n            form={form}>\n            {!clientId &&\n              <ClientDetails />\n            }\n            <PolicyDetails />\n            <Button\n              type=\"primary\"\n              onClick={\n                clientId ? submitPolicy : submitClient\n              }\n              loading={loading}>\n              Submit\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Page>\n  );\n}","import request from './helpers/request';\n\nconst BASE_URL = '/insurers';\n\nexport async function postInsurer(insurer) {\n  const {token, ...rest} = insurer;\n  return await request({\n    url: BASE_URL,\n    method: 'POST',\n    body: rest,\n    headers: {\n      Authorization: `Bearer ${token}`,\n    }\n  })\n}\n\nexport async function loadInsurers() {\n  return await request({\n    url: BASE_URL,\n    method: 'GET'\n  });\n}\n\nexport async function search(searchTerm) {\n  return await request({\n    url: BASE_URL,\n    method: 'GET',\n    query: {\n      search: searchTerm\n    }\n  });\n}\n\nexport async function getById({\n  insurerId\n}) {\n  return await request({\n    url: `${BASE_URL}/${insurerId}`,\n    method: 'GET',\n  });\n}","import React, { useEffect, useState } from 'react';\nimport { Col, List, Row, Input, } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CaretRightOutlined } from '@ant-design/icons';\n\nimport Page from '../../components/Page';\nimport { loadInsurers, search } from '../../util/http/insurers';\nimport titleCase from '../../util/titleCase';\n\nconst { Search } = Input;\n\nexport default function InsurersList({ insurers, updateInsurers }) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  const [innerInsurers, setInnerInsurers] = useState(insurers);\n\n  useEffect(() => {\n    if (insurers.length < 20) {\n      try {\n        (async () => {\n          const res = await loadInsurers();\n          if (!res) return;\n          updateInsurers(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR insurers', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ? insurers.filter(i => i.name.match(term)) : insurers;\n    setInnerInsurers(match);\n  }, [insurers, term]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updateInsurers(resp.data);\n    }\n  };\n\n  return (\n    <Page pageTitle=\"Registered Insurers\">\n      <Row justify=\"center\">\n        <Col flex=\"auto\">\n          <Row justify=\"center\">\n            <Col span={14}>\n              <Search placeholder=\"Insurer name\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={20}>\n              <List\n                itemLayout=\"horizontal\"\n                dataSource={innerInsurers}\n                renderItem={item => (\n                  <Link to={{\n                    pathname: `/app/insurers/${item.id}`,\n                    state: {\n                      prevPath: location.pathname\n                    }\n                  }}>\n                    <List.Item>\n                      <List.Item.Meta\n                        title={titleCase(item.name)}\n                        description={\n                          \"Registered \" +\n                          new Date(item.createdAt).toLocaleDateString()\n                        }\n                      />\n                      <div>\n                        <CaretRightOutlined />\n                      </div>\n                    </List.Item>\n                  </Link>\n                )}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n","import React, { useEffect } from 'react';\nimport {\n  Button,\n  Col,\n  Row,\n  Typography\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Link, useLocation, useParams, useHistory } from 'react-router-dom';\n\nimport Subscriptions from '../../../containers/common/Subscriptions';\nimport ProfileContainer from '../../../components/ProfileContainer';\nimport ProfileSkeleton from '../../../components/ProfileSkeleton';\nimport { search } from '../../../util/http/policies';\nimport { getById } from '../../../util/http/insurers';\nimport titleCase from '../../../util/titleCase';\n\nconst { Text } = Typography;\n\nexport default function InsurerProfile({ insurer, updatePolicies, addInsurer }) {\n  const { insurerId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      if (!insurer) {\n        const resp = await getById({\n          insurerId\n        });\n        if (resp && resp.data) {\n          addInsurer(resp.data);\n        } else {\n          history.replace('/insurers');\n        }\n      }\n    })();\n  }, [insurer]);\n\n  const loadPolicies = async (subs) => {\n    if (subs.length <= 2) {\n      const resp = await search({\n        insurer: insurer.id\n      });\n      if (resp && resp.data) {\n        updatePolicies(resp.data);\n      }\n    }\n  };\n\n  if (!insurer) {\n    return (\n      <ProfileSkeleton />\n    );\n  }\n\n  return (\n    <ProfileContainer\n      label=\"Insurer name\"\n      title={titleCase(insurer.name)}\n      fallbackUrl=\"/app/insurers\">\n      <div style={{\n        paddingLeft: '1em',\n        marginBottom: '1.5em',\n      }}>\n        <Row>\n          <Col span={5}>\n            <Text>Address</Text>\n          </Col>\n          <Col flex>\n            <Text strong>\n              {\n                titleCase(`${insurer.addressNumber} ` +\n                  `${insurer.addressTown}, ${insurer.addressCode}`)\n              }\n            </Text>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={5}>\n            <Text>Phone</Text>\n          </Col>\n          <Col flex>\n            <Text strong>{insurer.phoneNumber}</Text>\n          </Col>\n        </Row>\n      </div>\n      <Subscriptions\n        insurerId={insurer.id}\n        fallback={() => <AddClient insurer={insurer} />}\n        onMount={loadPolicies}\n      />\n    </ProfileContainer>\n  );\n}\n\nfunction AddClient({ insurer }) {\n  return (\n    <Row justify=\"center\"\n      style={{\n        marginTop: '4em'\n      }}>\n      <Col>\n        <Text\n          style={{\n            marginRight: '1em'\n          }}\n          strong>\n          This insurer has no clients yet.\n          </Text>\n        <Link to={{\n          pathname: `/app/clients/new/${insurer.id}`,\n        }}>\n          <Button\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<PlusOutlined />} />\n        </Link>\n      </Col>\n    </Row>\n  );\n}","import { connect } from 'react-redux';\n\nimport InsurerProfile from '../../../pages/insurers/parts/InsurerProfile';\nimport { updatePolicies, addInsurer } from '../../../redux/actions';\n\nconst mapStateToProps = (state, { insurerId }) => ({\n  insurer: state.insurers.find(i => Number(i.id) === Number(insurerId))\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicies: (policies) => dispatch(updatePolicies(policies)),\n  addInsurer: (insurer) => dispatch(addInsurer(insurer))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InsurerProfile);","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Profile from '../../components/Profile';\nimport InsurerProfile from '../../containers/insurers/parts/InsurerProfile';\n\nexport default function Insurer() {\n  const { insurerId } = useParams();\n\n  return (\n    <Profile>\n      <InsurerProfile insurerId={insurerId} />\n    </Profile>\n  );\n}","import React from 'react';\nimport { Col, Card, Row, Form, Input } from 'antd';\n\nexport default function InsurerDetails() {\n  return (\n    <Card\n      title=\"Vehicle details\">\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Issuer name\"\n            name=\"name\"\n            rules={[\n              { required: true, message: 'Insurer name is required' },\n              {\n                pattern: /^[a-zA-Z0-9\\s]{2,}$/,\n                message: 'At least 2 characters and no contain special characters.'\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Phone number\"\n            name=\"phoneNumber\"\n            rules={[\n              {\n                pattern: /^0(7\\d{1}|20)\\d{7}$/,\n                message: 'Invalid format'\n              }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Address\"\n            name=\"addressNumber\"\n            rules={[\n              { required: true, message: 'Address number is required' },\n              {\n                pattern: /^[a-zA-Z0-9\\s]{1,}$/,\n                message: 'Invalid address'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Postal code\"\n            name=\"addressCode\"\n            rules={[\n              { required: true, message: 'Postal code is required' },\n              {\n                pattern: /^[0-9]{1,}$/,\n                message: 'Value should be a number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Town\"\n            name=\"addressTown\"\n            rules={[\n              { required: true, message: 'Address town is required' },\n              {\n                pattern: /^[a-zA-Z\\s]{2,}$/,\n                message: 'Invalid town name'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n  );\n}","import { connect } from 'react-redux';\n\nimport { NewInsurerForm } from '../../pages/insurers';\nimport { addInsurer, addSuccess, addError } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  token: state.auth.token\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addInsurer(issuer) {\n    dispatch(addInsurer(issuer));\n  },\n  addSuccess(success) {\n    dispatch(addSuccess(success));\n  },\n  addError: error => dispatch(addError(error))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewInsurerForm);\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Col,\n  Form,\n  Row,\n} from 'antd';\n\nimport InsurerDetails from './parts/InsurerDetails';\nimport Page from '../../components/Page';\n\nimport { postInsurer } from '../../util/http/insurers';\n\nimport '../Form.css';\n\nexport default function NewInsurerForm({\n  addInsurer, addSuccess, token, addError,\n}) {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await postInsurer({\n        token,\n        ...values\n      });\n      if (resp && resp.data) {\n        addInsurer(resp.data);\n        addSuccess('Data submitted successfully');\n        form.resetFields();\n      } else if (resp && resp.error) {\n        addError(resp.error);\n      }\n    } catch (error) {\n      addError(error.message);\n    } finally {\n      setLoading(false)\n    }\n  };\n\n  const onFinishFailed = ({ values, errorFields }) => {\n    console.log('Error', errorFields);\n  };\n\n  return (\n    <Page pageTitle=\"Register new insurer\">\n      <Row justify=\"center\">\n        <Col>\n          <Form className=\"OForm\"\n            form={form}\n            colon={false}\n            labelAlign=\"left\"\n            scrollToFirstError={true}\n            onFinishFailed={onFinishFailed}>\n            <InsurerDetails />\n            <Button type=\"primary\" onClick={onSubmit}\n              loading={loading}>\n              Submit\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Page>\n  );\n}","import { connect } from 'react-redux';\n\nimport { InsurersList } from '../../pages/insurers';\nimport { updateInsurers } from '../../redux/actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    insurers: state.insurers\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateInsurers: (insurers) => dispatch(updateInsurers(insurers))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InsurersList);","import React, { useState, useEffect } from 'react';\nimport {\n  Divider,\n  Col,\n  Input,\n  List,\n  Row,\n} from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CaretRightOutlined } from '@ant-design/icons';\n\nimport Page from '../components/Page';\nimport { search, loadInsurers } from '../util/http/insurers';\nimport titleCase from '../util/titleCase';\n\nconst { Search } = Input;\n\nexport default function SelectIssuer({ insurers, updateInsurers }) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  let [innerInsures, setInnerInsurers] = useState(insurers);\n\n  useEffect(() => {\n    if (insurers.length < 20) {\n      try {\n        (async () => {\n          const res = await loadInsurers();\n          if (!res) return;\n          updateInsurers(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR insurers', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ? insurers.filter(i => i.name.match(term)) : insurers;\n    setInnerInsurers(match);\n  }, [term, insurers]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updateInsurers(resp.data);\n    }\n  };\n\n  return (\n    <Page pageTitle=\"Select insurance provider.\">\n      <Row justify=\"center\" style={{ marginTop: '1.5em' }}>\n        <Col flex=\"auto\" span={16}>\n          <Row justify=\"center\">\n            <Col span={18}>\n              <Search placeholder=\"insurer name\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Divider />\n          <Row justify=\"center\">\n            <Col flex=\"auto\" span={16}>\n              <List\n                dataSource={innerInsures}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  const link = {\n                    pathname: `/app/clients/new/${item.id}`,\n                    state: {\n                      clientId: location?.state?.clientId\n                    }\n                  };\n                  return (\n                    <Link to={link}>\n                      <List.Item>\n                        <List.Item.Meta\n                          title={<Link to={link}>{titleCase(item.name)}</Link>}\n                        />\n                        <CaretRightOutlined />\n                      </List.Item>\n                    </Link>\n                  );\n                }\n                }\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}","import { connect } from 'react-redux';\n\nimport SelectInsurer from '../../pages/SelectInsurer';\nimport { updateInsurers } from '../../redux/actions';\n\nconst mapStateToProps = ({ insurers }) => ({\n  insurers,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateInsurers: (insurers) => dispatch(updateInsurers(insurers))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectInsurer);","import { connect } from 'react-redux';\n\nimport { NewAdminForm } from '../../pages/admins';\nimport { addSuccess, addError } from '../../redux/actions';\n\nconst mapDispatchToProps = (dispatch) => ({\n  addSuccess: (success) => dispatch(addSuccess(success)),\n  addError: (error) => dispatch(addError(error))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NewAdminForm);","import React, { useState, useEffect } from 'react';\nimport {\n  List,\n  Row,\n  Col,\n  Space,\n  Typography,\n  Input\n} from 'antd';\nimport {\n  CaretRightOutlined,\n  CheckCircleOutlined,\n  InfoCircleFilled,\n  CarOutlined,\n  FireOutlined\n} from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Page from '../../components/Page';\nimport { search } from '../../util/http/policies';\n\nconst { Search } = Input;\n\nexport default function NewApplicationList({ newApplications, updatePolicies }) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  const [innerPolicies, setInnerPolicies] = useState(newApplications);\n\n  useEffect(() => {\n    if (newApplications.length < 20) {\n      try {\n        (async () => {\n          const res = await search({\n            type: 'new'\n          });\n          if (!res) return;\n          updatePolicies(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR new policies', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ?\n      newApplications.filter(i => i.policyNumber.match(term)) :\n      newApplications;\n    setInnerPolicies(match);\n  }, [newApplications, term]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n    \n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updatePolicies(resp.data);\n    }\n  };\n\n  return (\n    <Page pageTitle=\"New Applications\">\n      <Row justify=\"center\">\n        <Col flex=\"auto\">\n          <Row justify=\"center\">\n            <Col span={14}>\n              <Search placeholder=\"Policy number\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={20}>\n              <List\n                itemLayout=\"vertical\"\n                dataSource={innerPolicies}\n                renderItem={item => (\n                  <Link to={{\n                    pathname: `/app/policies/${item.id}`,\n                    state: {\n                      prevPath: location.pathname\n                    }\n                  }}>\n                    <List.Item\n                      actions={\n                        [\n                          <IconText\n                            icon={item.policyClass === 'fire' ?\n                              FireOutlined :\n                              CarOutlined\n                            }\n                            text={`${item.policyClass || 'vehicle'}`}\n                            // type=\"success\"\n                            key=\"policyClass\" />,\n                          ...(item.approved ?\n                            [\n                              <IconText\n                                icon={CheckCircleOutlined}\n                                text=\"Approved\"\n                                type=\"success\"\n                                key=\"approvedIcon\" />\n                            ] :\n                            [\n                              <IconText\n                                icon={InfoCircleFilled}\n                                text=\"Not approved\"\n                                type=\"warning\"\n                                key=\"notApprovedIcon\" />\n                            ])\n                        ]\n                      }\n                      extra={\n                        <CaretRightOutlined />\n                      } >\n                      <List.Item.Meta\n                        title={String(item.policyNumber).toUpperCase()}\n                        description={\n                          \"Applied \" +\n                          new Date(item.createdAt).toLocaleDateString()\n                        }\n                      />\n                    </List.Item>\n                  </Link>\n                )}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n\nfunction IconText({ icon, text, type }) {\n  return (\n    <Space>\n      <Typography.Text type={type}>\n        {React.createElement(icon)}\n        {\" \"}\n        {text}\n      </Typography.Text>\n    </Space>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Col, List, Row, Input } from 'antd';\nimport { CaretRightOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Page from '../../components/Page';\nimport { search } from '../../util/http/policies';\n\nconst { Search } = Input;\n\nexport default function RenewalApplicationsList({\n  renewalApplications,\n  updatePolicies\n}) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  const [innerPolicies, setInnerPolicies] = useState(renewalApplications);\n\n  useEffect(() => {\n    if (renewalApplications.length < 20) {\n      try {\n        (async () => {\n          const res = await search({\n            type: 'renewal'\n          });\n          if (!res) return;\n          updatePolicies(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR renewal policies', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ?\n      renewalApplications.filter(i => i.policyNumber.match(term)) :\n      renewalApplications;\n    setInnerPolicies(match);\n  }, [renewalApplications, term]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n\n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updatePolicies(resp.data);\n    }\n  };\n\n  return (\n    <Page pageTitle=\"Renewal Applications\">\n      <Row justify=\"center\">\n        <Col flex=\"auto\">\n          <Row justify=\"center\">\n            <Col span={14}>\n              <Search placeholder=\"Policy number\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col span={20}>\n              <List\n                itemLayout=\"horizontal\"\n                dataSource={innerPolicies}\n                renderItem={item => (\n                  <Link to={{\n                    pathname: `/app/policies/${item.id}`,\n                    state: {\n                      prevPath: location.pathname\n                    }\n                  }}>\n                    <List.Item>\n                      <List.Item.Meta\n                        title={String(item.policyNumber).toUpperCase()}\n                        description={\n                          \"Applied \" +\n                          new Date(item.createdAt).toLocaleDateString()\n                        }\n                      />\n                      <div>\n                        <CaretRightOutlined />\n                      </div>\n                    </List.Item>\n                  </Link>\n                )}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n","export default {\n  policyHoldersFund: 40,\n  trainingLevy: 32,\n  withholdingTax: 160\n};\n","import React from 'react';\nimport { Row, Typography, Col } from 'antd';\n\nimport co from '../../util/companyConstants';\n\nimport './DebitNote.css';\n\nconst { Text, Title } = Typography;\n\nconst basicPremium = 16000.00;\nconst trainingLevy = co.trainingLevy.toFixed(2);\nconst policyHoldersFund = co.policyHoldersFund.toFixed(2);\nconst renewalPremium = basicPremium + co.policyHoldersFund + co.trainingLevy;\n\nconst commission = (basicPremium * 0.1);\nconst withHoldingTax = co.withholdingTax.toFixed(2);\nconst netDue = renewalPremium - commission + co.withholdingTax;\n\nexport default function DebitNote() {\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <Title level={3}>PREMIUM DEBIT NOTE</Title>\n        <Row className=\"AddressRow\">\n          <Col flex=\"auto\">\n            <p><Text strong>Insurer</Text></p>\n            <p>CARE INSURANCE AGENCY</p>\n            <p>P.O BOX 34</p>\n            <p>KERUGOYA</p>\n          </Col>\n          <Col flex=\"auto\">\n            <p><Text strong>Client</Text></p>\n            <p>Martin muthika</p>\n            <p>p.o box 56</p>\n            <p>KERUGOYA</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col flex=\"auto\">\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Policy Number:</Text>\n              </Col>\n              <Col>\n                <Text>EMB/7878/2011</Text>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Regarding:</Text>\n              </Col>\n              <Col>\n                <Text>RENEWAL PREMIUM</Text>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Class:</Text>\n              </Col>\n              <Col>\n                <Text>Vehicle</Text>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Reg No:</Text>\n              </Col>\n              <Col>\n                <Text>KBA 457Y</Text>\n              </Col>\n            </Row>\n          </Col>\n          <Col flex=\"auto\">\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Cover from:</Text>\n              </Col>\n              <Col>\n                <Text>11/3/2019</Text>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>To:</Text>\n              </Col>\n              <Col>\n                <Text>11/3/2020</Text>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row justify=\"end\" style={{marginTop: '2em'}}>\n          <Col span={12}>\n            <Row>\n              <Col span={10}>\n                <Text strong>Basic premium:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>{basicPremium}</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={10}>\n                <Text strong>Policyholders fund:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>{policyHoldersFund}</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={10}>\n                <Text strong>Training levy:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>{trainingLevy}</Text>\n              </Col>\n            </Row>\n            <hr />\n            <Row>\n              <Col span={10}>\n                <Text strong>RENEWAL PREMIUM:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text strong>{\n                  renewalPremium.toFixed(2)\n                }</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={10}>\n                <Text strong>Commission:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>-{commission}</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={10}>\n                <Text strong>Withholding Tax:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>{withHoldingTax}</Text>\n              </Col>\n            </Row>\n            <hr />\n            <Row>\n              <Col span={10}>\n                <Text strong>Net Amount Due:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text strong>{netDue.toFixed(2)}</Text>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row style={{ marginTop: '3.5em' }}>\n          <Col flex=\"auto\">\n            Prepared by: <Text strong>ESEDIEM</Text>\n          </Col>\n          <Col flex=\"auto\">\n            Signed By: <Text strong>For and on behalf of KENYA ORIENT INSURANCE LTD</Text>\n          </Col>\n          <Col flex=\"auto\">\n            <Text strong>13-Nov-2019</Text>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}","import { connect } from 'react-redux';\n\nimport { NewApplicationList } from '../../pages/reports'\nimport { updatePolicies } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  newApplications: state.policies.filter(p => p.type !== 'renewal')\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicies: (policies) => dispatch(updatePolicies(policies))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewApplicationList);","import { connect } from 'react-redux';\n\nimport { RenewalApplicationList } from '../../pages/reports'\nimport { updatePolicies } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  renewalApplications: state.policies.filter(p => p.type === 'renewal')\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicies: (policies) => dispatch(updatePolicies(policies))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RenewalApplicationList);","import React from 'react';\nimport { Switch, Redirect, Route, useRouteMatch } from 'react-router-dom';\n\nimport NewApplicationList from '../containers/reports/NewApplicationList';\nimport RenewalApplicationList from '../containers/reports/RenewalsApplicationList';\nimport { DebitNote } from './reports';\n\nexport default function Applications() {\n  const { path } = useRouteMatch();\n  \n  return (\n    <Switch>\n      <Route path={`${path}/new`}>\n        <NewApplicationList />\n      </Route>\n      <Route path={`${path}/renewals`}>\n        <RenewalApplicationList />\n      </Route>\n      <Route path={`${path}/debit-note`}>\n        <DebitNote />\n      </Route>\n      <Route path=\"*\">\n        <Redirect to={`${path}/new`} />\n      </Route>\n    </Switch>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Card, Typography } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function Item(props) {\n  const location = useLocation();\n\n  const OCard = ({ title, children }) => {\n    const [mouseOver, setMouseOver] = useState(false);\n    const mouseEnter = () => {\n      if (!props.routerTo) {\n        return null;\n      }\n      setMouseOver(true);\n    };\n    const mouseLeave = () => {\n      if (!props.routerTo) {\n        return null;\n      }\n      setMouseOver(false);\n    };\n\n    return (\n      <Card\n        onMouseEnter={mouseEnter}\n        onMouseLeave={mouseLeave}>\n        <div>\n          <Typography.Title level={4}\n            style={{\n              fontSize: 16\n            }}>\n            {title}\n            {mouseOver && <LinkOutlined\n              style={{\n                marginLeft: '0.5em'\n              }} />}\n          </Typography.Title>\n        </div>\n        {children}\n      </Card>\n    );\n  };\n  return (\n    <Col span={12}>\n      {props.routerTo ?\n        <Link to={{\n          pathname: props.routerTo,\n          state: {\n            prevPath: location.pathname\n          }\n        }}>\n          <OCard {...props}>\n            {props.children}\n          </OCard>\n        </Link> :\n        <OCard {...props}></OCard>}\n    </Col>\n  );\n};","import React, { useEffect } from 'react';\nimport { Col, Row, Typography } from 'antd';\n\nimport Item from './Item';\nimport { getVehicle } from '../../../util/http/policies';\nimport titleCase from '../../../util/titleCase';\n\nconst { Text } = Typography;\n\nexport default function VehicleCard({ policyId, vehicle, addVehicle }) {\n  useEffect(() => {\n    (async () => {\n      if (!vehicle) {\n        const resp = await getVehicle({\n          policyId\n        });\n        if (resp && resp.data) {\n          addVehicle(resp.data);\n        }\n      }\n    })();\n  }, [vehicle]);\n\n  if (!vehicle) {\n    return null;\n  }\n\n  return (\n    <Item\n      title=\"Vehicle\" >\n      <Row>\n        <Col span={10}>\n          <Text>Reg No</Text>\n        </Col>\n        <Col>\n          <Text strong>\n            {String(vehicle.registrationNumber).toUpperCase()}\n          </Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={10}>\n          <Text>Make</Text>\n        </Col>\n        <Col>\n          <Text strong>\n            {titleCase(vehicle.make)}\n          </Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={10}>\n          <Text>Y.o.M</Text>\n        </Col>\n        <Col>\n          <Text strong>\n            {new Date(vehicle.manufactureYear).getFullYear()}\n          </Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={10}>\n          <Text>Rating (cc)</Text>\n        </Col>\n        <Col>\n          <Text strong>\n            {vehicle.ratingCc}\n          </Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={10}>\n          <Text>Body color</Text>\n        </Col>\n        <Col>\n          {/* <Text strong>\n            {vehicle.bodyColor}\n          </Text> */}\n          <ColorPad color={vehicle.bodyColor} />\n        </Col>\n      </Row>\n    </Item>\n  );\n}\n\nfunction ColorPad({ color }) {\n  return (\n    <div style={{\n      display: 'inline-block',\n      width: '1em',\n      height: '1em',\n      backgroundColor: color,\n      borderRadius: 3\n    }}></div>\n  );\n}","import React, { useEffect } from 'react';\nimport { Col, Row, Typography } from 'antd';\n\nimport Item from './Item';\nimport { getById } from '../../../util/http/insurers';\nimport titleCase from '../../../util/titleCase';\n\nexport default function InsurerCard({ insurerId, insurer, addInsurer }) {\n  useEffect(() => {\n    (async () => {\n      if (!insurer) {\n        const resp = await getById({\n          insurerId\n        });\n        if (resp && resp.data) {\n          addInsurer(resp.data);\n        }\n      }\n    })();\n  }, [insurer]);\n\n  if (!insurer) {\n    return null;\n  }\n\n  return (\n    <Item\n      title=\"Insurer\"\n      routerTo={`/app/insurers/${insurer.id}`}>\n      <Row>\n        <Col span={6}>\n          <Typography.Text>Name</Typography.Text>\n        </Col>\n        <Col>\n          <Typography.Text strong>\n            {titleCase(insurer.name)}\n          </Typography.Text>\n        </Col>\n      </Row>\n    </Item>\n  );\n}","import { connect } from 'react-redux';\n\nimport PolicyDetails from '../../../pages/policies/parts/PolicyDetails';\nimport { addVehicle, addInsurer } from '../../../redux/actions';\n\nconst mapStateToProps = (state, { policyId, insurerId }) => ({\n  vehicle: state.vehicles.find(v => Number(v.policy) === Number(policyId)),\n  insurer: state.insurers.find(i => Number(i.id) === Number(insurerId))\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addVehicle: (vehicle) => dispatch(addVehicle(vehicle)),\n  addInsurer: (insurer) => dispatch(addInsurer(insurer))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PolicyDetails);","import React from 'react';\nimport { Row } from 'antd';\n\nimport VehicleCard from './VehicleCard';\nimport InsurerCard from './InsurerCard';\n\nexport default function PolicyDetails(props) {\n  return (\n    <Row gutter={32}>\n      {(props.policyClass === 'vehicle') &&\n        <VehicleCard {...props} />\n      }\n      <InsurerCard {...props} />\n    </Row>\n  );\n}","import { connect } from 'react-redux';\n\nimport ClientDetails from '../../../pages/policies/parts/ClientDetails';\nimport { addClient } from '../../../redux/actions';\n\nconst mapStateToProps = (state, {clientId}) => ({\n  client: state.clients.find(c => c.id === clientId)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addClient: (client) => dispatch(addClient(client))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientDetails);","import React, { useEffect } from 'react';\nimport { Popover, Typography } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { getById } from '../../../util/http/clients';\nimport titleCase from '../../../util/titleCase';\n\nexport default function ClientDetails({ client, clientId, addClient }) {\n  useEffect(() => {\n    (async () => {\n      if (!client) {\n        const resp = await getById({\n          clientId\n        });\n        if (resp && resp.data) {\n          addClient(resp.data);\n        }\n      }\n    })();\n  }, [client]);\n\n  if (!client) {\n    return null;\n  }\n\n  return (\n    <Popover\n      placement=\"bottomLeft\"\n      title=\"ID Number\"\n      content={\n        <Typography.Text>{client.idNumber}</Typography.Text>\n      }\n    >\n      <Link to={{\n        pathname: `/app/clients/${client.id}`\n      }}>\n        {titleCase(`${client.firstName} ${client.lastName[0]}`)}\n      </Link>\n    </Popover>\n  );\n}","import { connect } from 'react-redux';\n\nimport ApprovalBtn from '../../../pages/policies/parts/ApprovalBtn';\nimport { updatePolicy, addSuccess } from '../../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  token: state.auth.token\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicy: (policy) => dispatch(updatePolicy(policy)),\n  addSuccess: (success) => dispatch(addSuccess(success))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ApprovalBtn);","import React, { useState } from 'react';\nimport {\n  Col,\n  Row,\n  Badge,\n  Button,\n  Typography\n} from 'antd';\nimport { ExceptionOutlined } from '@ant-design/icons';\n\nimport { approvePolicy } from '../../../util/http/policies';\n\nexport default function ApprovalBtn({ policy, updatePolicy, addSuccess, token }) {\n  const [loading, setLoading] = useState(false);\n\n  const onApprove = async () => {\n    setLoading(true);\n    try {\n      const resp = await approvePolicy({\n        policyId: policy.id,\n        token\n      });\n      if (resp && resp.data) {\n        updatePolicy(resp.data);\n        addSuccess('Policy has been approved');\n      }\n    } catch (error) {\n      console.log('ERROR', error);\n    }\n  };\n  return (\n    <Row style={{\n      margin: '2em auto 1em'\n    }}>\n      <Col span={5}\n        style={{\n          display: 'flex',\n          alignItems: 'center'\n        }}>\n        <Badge\n          dot\n          status=\"warning\" >\n          <ExceptionOutlined />\n        </Badge>\n        <Typography.Text\n          style={{ marginLeft: '0.5em' }}>\n          Not approved\n        </Typography.Text>\n      </Col>\n      <Col flex>\n        <Button type=\"primary\"\n          loading={loading}\n          onClick={onApprove}>\n          Approve\n        </Button>\n      </Col>\n    </Row>\n  );\n}","import React, { useEffect } from 'react';\nimport {\n  Col,\n  Row,\n  Typography,\n} from 'antd';\nimport { useParams, useHistory } from 'react-router-dom';\n\n\nimport PolicyDetails from '../../../containers/policies/parts/PolicyDetails';\nimport ClientDetails from '../../../containers/policies/parts/ClientDetails';\nimport ApprovalBtn from '../../../containers/policies/parts/ApprovalBtn';\nimport ProfileContainer from '../../../components/ProfileContainer';\nimport ProfileSkeleton from '../../../components/ProfileSkeleton';\nimport { getById } from '../../../util/http/policies';\n\nconst { Text } = Typography;\n\nexport default function PolicyProfile({ policy, addPolicy }) {\n  const { policyId } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    (async () => {\n      if (!policy) {\n        const resp = await getById({\n          policyId\n        });\n        if (resp && resp.data) {\n          addPolicy(resp.data);\n        } else {\n          history.push(\"/reports/applications\");\n        }\n      }\n    })();\n  }, [policy]);\n\n  if (!policy) {\n    return (\n      <ProfileSkeleton />\n    );\n  }\n\n  return (\n    <ProfileContainer\n      label=\"Policy no\"\n      title={String(policy.policyNumber).toUpperCase()}\n      fallbackUrl=\"/app/reports/applications\">\n      <div style={{\n        paddingLeft: '1em',\n        marginBottom: '1.5em',\n      }}>\n        <Row>\n          <Col span={5}>\n            <Text>Applied</Text>\n          </Col>\n          <Col flex>\n            <Text strong>\n              {new Date(policy.createdAt).toLocaleDateString()}\n            </Text>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={5}>\n            <Text>Client</Text>\n          </Col>\n          <Col flex>\n            <ClientDetails clientId={policy.client} />\n          </Col>\n        </Row>\n        <Row>\n          <Col span={5}>\n            <Text>Class</Text>\n          </Col>\n          <Col flex>\n            <Text strong>{policy.policyClass}</Text>\n          </Col>\n        </Row>\n        {!policy.approved &&\n          <ApprovalBtn policy={policy} />\n        }\n      </div>\n      <PolicyDetails\n        policyId={policy.id}\n        insurerId={policy.insurer}\n        policyClass={policy.policyClass} />\n    </ProfileContainer>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport PolicyProfile from '../../../pages/policies/parts/PolicyProfile';\nimport { addPolicy } from '../../../redux/actions';\n\nconst mapStateToProps = (state, { policyId }) => ({\n  policy: state.policies.find(p => Number(p.id) === Number(policyId))\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPolicy: (policy) => dispatch(addPolicy(policy))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PolicyProfile);","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Profile from '../../components/Profile';\nimport PolicyProfile from '../../containers/policies/parts/PolicyProfile';\n\nexport default function Policy({ insurers }) {\n  const { policyId } = useParams();\n\n  return (\n    <Profile>\n      <PolicyProfile policyId={policyId} />\n    </Profile>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  useRouteMatch,\n  useLocation,\n} from 'react-router-dom';\nimport { Layout } from 'antd';\n\nimport OSider from '../components/OSider';\n\nimport OHeader from '../containers/common/Oheader';\nimport ClientList from '../containers/clients/ClientList';\nimport NewClientForm from '../containers/clients/NewClientForm';\nimport NewInsurerForm from '../containers/insurers/NewInsurer';\nimport InsurersList from '../containers/insurers/InsurersList';\nimport SelectInsurer from \"../containers/clients/SelectInsurer\";\nimport NewAdminForm from \"../containers/admins/NewAdminForm\";\nimport Applications from './Applications';\nimport { Insurer } from \"./insurers\";\nimport { Client } from './clients';\nimport { Policy } from './policies';\n\nconst { Content } = Layout;\n\nexport default function Main({ auth, addError }) {\n  const location = useLocation();\n  const { path } = useRouteMatch();\n  const [collapsed, setCollapsed] = useState(false);\n  useEffect(() => {\n    !auth?.token && addError('You need to login first');\n  });\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  if (!auth?.token) {\n    console.log('Redirecting', auth);\n    return <Redirect to={{\n      pathname: \"/login\",\n      state: {\n        attemptedRoute: location.pathname\n      }\n    }} />\n  }\n\n  return (\n    <Layout>\n      <OSider collapsed={collapsed} />\n      <Layout className=\"site-layout\">\n        <OHeader collapsed={collapsed} toggle={toggle} />\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: '8px 0 0',\n            padding: '0 24px 24px',\n            minHeight: 280,\n            position: 'relative',\n          }}\n        >\n          <Switch>\n            <Route exact path={`${path}/clients/new`}>\n              <SelectInsurer />\n            </Route>\n            <Route exact path={`${path}/clients/new/:insurerId`}>\n              <NewClientForm />\n            </Route>\n            <Route exact path={`${path}/clients/:clientId`}>\n              <Client />\n            </Route>\n            <Route path={`${path}/clients`}>\n              <ClientList />\n            </Route>\n            <Route exact path={`${path}/insurers/new`}>\n              <NewInsurerForm />\n            </Route>\n            <Route exact path={`${path}/insurers/:insurerId`}>\n              <Insurer />\n            </Route>\n            <Route path={`${path}/insurers`}>\n              <InsurersList />\n            </Route>\n            <Route path={`${path}/reports/applications`}>\n              <Applications />\n            </Route>\n            <Route path={`${path}/policies/:policyId`}>\n              <Policy />\n            </Route>\n            <Route path={`${path}/admins/new`}>\n              <NewAdminForm />\n            </Route>\n            <Route path=\"*\">\n              <Redirect to={`${path}/clients`} />\n            </Route>\n          </Switch>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}","import { connect } from 'react-redux'\n\nimport Main from '../pages/Main';\nimport { addError } from '../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addError: (error) => dispatch(addError(error))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);"],"sourceRoot":""}