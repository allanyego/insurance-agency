{"version":3,"sources":["components/PageTitle.js","components/Page.js","util/http/admins.js","util/http/helpers/handleError.js","util/http/constants.js","util/http/helpers/request.js","pages/admins/parts/AuthPage.js","pages/admins/parts/PasswordDetails.js","pages/admins/ChangePassword.js","components/InputCol.js","pages/admins/parts/AdminDetails.js","pages/admins/NewAdminForm.js","pages/admins/parts/LoginDetails.js","pages/admins/Login.js","components/OSider.js","util/titleCase.js","components/OHeader.js","containers/common/Oheader.js","util/http/clients.js","pages/clients/ClientList.js","pages/clients/parts/ClientDetails.js","pages/clients/parts/VehicleDetails.js","pages/clients/parts/PolicyDetails.js","util/http/policies.js","components/Profile.js","containers/common/Subscriptions.js","components/Subscriptions.js","components/ProfileHeader.js","components/ProfileContainer.js","components/Detail.js","components/ProfileSkeleton.js","pages/clients/parts/ClientProfile.js","containers/clients/parts/ClientProfile.js","pages/clients/Client.js","containers/clients/ClientList.js","containers/clients/NewClientForm.js","pages/clients/NewClientForm.js","util/http/insurers.js","pages/insurers/InsurersList.js","pages/insurers/parts/InsurerProfile.js","containers/insurers/parts/InsurerProfile.js","pages/insurers/Insurer.js","pages/insurers/parts/InsurerDetails.js","containers/insurers/NewInsurer.js","pages/insurers/NewInsurerForm.js","containers/insurers/InsurersList.js","pages/SelectInsurer.js","containers/clients/SelectInsurer.js","containers/admins/NewAdminForm.js","pages/reports/NewApplicationList.js","pages/reports/RenewalApplicationList.js","util/companyConstants.js","pages/reports/DebitNote.js","containers/reports/NewApplicationList.js","containers/reports/RenewalsApplicationList.js","pages/Applications.js","pages/policies/parts/Item.js","pages/policies/parts/VehicleCard.js","pages/policies/parts/InsurerCard.js","containers/policies/parts/PolicyDetails.js","pages/policies/parts/PolicyDetails.js","containers/policies/parts/ClientDetails.js","pages/policies/parts/ClientDetails.js","containers/policies/parts/ApprovalBtn.js","pages/policies/parts/ApprovalBtn.js","pages/policies/parts/PolicyProfile.js","containers/policies/parts/PolicyProfile.js","pages/policies/Policy.js","pages/Main.js","containers/Main.js"],"names":["PageTitle","pageTitle","justify","Title","level","Page","children","className","postAdmin","admin","a","newAdmin","firstName","middleName","lastName","email","idNumber","phoneNumber","addressNumber","addressCode","addressTown","request","url","method","body","headers","Authorization","token","login","password","changePassword","adminId","oldPassword","newPassword","newPasswordConfirm","handleError","error","console","log","store","dispatch","addError","process","NODE_ENV","SERVER_URL","API_URL","query","queryBody","constructUrlBody","requestUrl","fetch","JSON","stringify","resp","json","status","data","message","ulrBody","name","hasOwnProperty","value","toString","encodeURIComponent","replace","push","join","AuthPage","title","src","alt","style","margin","display","borderRadius","width","marginBottom","PasswordDetails","gutter","span","Item","label","rules","required","Password","pattern","dependencies","hasFeedback","getFieldValue","validator","rule","Promise","resolve","reject","ChangePassword","location","useLocation","useForm","form","useState","loading","setLoading","changeSuccess","setChangeSuccess","submitPassword","validateFields","values","state","resetFields","xs","sm","md","lg","xl","to","type","onClick","InputCol","nameReg","AdminDetails","NewAdminForm","addSuccess","submitAdmin","LoginDetails","valuePropName","extra","defaultChecked","Login","auth","history","useHistory","loginAdmin","adminLogin","accState","pathname","id","rememberMe","attemptedRoute","Sider","SubMenu","OSider","collapsed","open","trigger","collapsible","theme","mode","key","UserOutlined","PlusCircleOutlined","DatabaseOutlined","BankOutlined","FileAddOutlined","AuditOutlined","CopyOutlined","DiffOutlined","RedoOutlined","UsergroupAddOutlined","titleCase","str","split","map","s","toUpperCase","Header","useBreakpoint","connect","user","logout","toggle","toggleOpen","screens","isSmallScreen","setIsSmallScreen","useEffect","padding","justifyContent","alignItems","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","CloseOutlined","MenuOutlined","placement","content","block","icon","LogoutOutlined","postClient","client","newClient","kraPin","insurer","occupation","policy","policyNumber","policyPeriod","sumInsured","premiumRate","pvt","excessProtection","antiTheftCoverage","rookie","passengersPllCoverage","policyClass","vehicle","registrationNumber","make","bodyType","bodyColor","manufactureYear","engineNumber","chasisNumber","tonnage","ratingCc","loadClients","search","searchTerm","getById","clientId","Search","ClientDetails","VehicleDetails","YearPicker","Text","PolicyDetails","isForVehicle","setIsForVehicle","startDate","setStartDate","Group","help","disabledDate","currentDate","isBefore","onChange","date","isSameOrBefore","min","event","target","strong","postPolicy","policyDetails","approvePolicy","policyId","approved","getVehicle","Profile","paddingTop","insurerId","subscriptions","policies","filter","p","fallback","onMount","length","size","itemLayout","dataSource","renderItem","item","prevPath","Meta","String","CaretRightOutlined","ProfileHeader","fallbackUrl","flex","disabled","danger","shape","ProfileContainer","props","header","Detail","ProfileSkeleton","AddPolicy","marginRight","PlusOutlined","clients","find","c","Number","updatePolicies","addClient","useParams","loadPolicies","subs","paddingLeft","Date","createdAt","toLocaleDateString","Client","updateClients","term","setTerm","innnerClients","setInnerClients","res","match","i","onSearch","placeholder","enterButton","description","addVehicle","addPolicy","success","wrap","fn","then","Error","postInsurer","rest","loadInsurers","AddClient","marginTop","insurers","addInsurer","Insurer","InsurerDetails","issuer","onSubmit","colon","labelAlign","scrollToFirstError","onFinishFailed","errorFields","updateInsurers","innerInsurers","setInnerInsurers","innerInsures","link","IconText","text","policyHoldersFund","trainingLevy","withholdingTax","co","toFixed","renewalPremium","withHoldingTax","netDue","basicPremium","DebitNote","newApplications","innerPolicies","setInnerPolicies","actions","FireOutlined","CarOutlined","CheckCircleOutlined","InfoCircleFilled","renewalApplications","Applications","path","useRouteMatch","OCard","mouseOver","setMouseOver","onMouseEnter","routerTo","onMouseLeave","fontSize","LinkOutlined","marginLeft","VehicleCard","getFullYear","ColorPad","color","height","backgroundColor","InsurerCard","vehicles","v","updatePolicy","onApprove","dot","ExceptionOutlined","Policy","Content","setCollapsed","setOpen","minHeight","position","exact","SelectInsurer","NewInsurer"],"mappings":"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","file":"static/js/6.f2e17c0a.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Row, Typography } from 'antd';\n\nexport default function PageTitle({ pageTitle }) {\n  return(\n    <Row justify=\"center\">\n        <Col>\n          <Typography.Title\n            level={3}>\n              {pageTitle}\n          </Typography.Title>\n        </Col>\n      </Row>\n  );\n}\n","import React from 'react';\n\nimport PageTitle from './PageTitle';\n\nimport './Page.css';\n\nexport default function Page({ pageTitle, children }) {\n  return (\n    <section className=\"Page\">\n      {pageTitle &&\n        <PageTitle pageTitle={pageTitle} />\n      }\n      {children}\n    </section>\n  );\n}","import request from './helpers/request';\n\nconst BASE_URL = '/admins';\n\nexport async function postAdmin(admin) {\n  const newAdmin = function (admin) {\n    return {\n      firstName: admin.firstName,\n      middleName: admin.middleName,\n      lastName: admin.lastName,\n      email: admin.email,\n      idNumber: admin.idNumber,\n      phoneNumber: admin.phoneNumber,\n      addressNumber: admin.addressNumber,\n      addressCode: admin.addressCode,\n      addressTown: admin.addressTown,\n    };\n  }(admin);\n\n  return await request({\n    url: `${BASE_URL}/register`,\n    method: 'POST',\n    body: newAdmin,\n    headers: {\n      Authorization: `Bearer ${admin.token}`,\n    }\n  });\n}\n\nexport async function login({\n  email,\n  password\n}) {\n  return await request({\n    url: `${BASE_URL}/login`,\n    method: 'POST',\n    body: {\n      email,\n      password,\n    }\n  });\n}\n\nexport async function changePassword({\n  adminId,\n  oldPassword,\n  newPassword,\n  newPasswordConfirm\n}) {\n  return await request({\n    url: `${BASE_URL}/${adminId}/change-password`,\n    method: 'PUT',\n    body: {\n      oldPassword,\n      newPassword,\n      newPasswordConfirm\n    }\n  });\n}","import store from '../../../redux/store';\nimport { addError } from '../../../redux/actions';\n\nexport default function handleError(error) {\n  console.log('TODO: handle error', error);\n  store.dispatch(addError(error));\n  return null;\n}","const API_URL = 'http://localhost:4000/api/v1';\n\nexport {\n  API_URL\n};","import handleError from './handleError';\nimport { API_URL as api_url } from '../constants';\n\nconst { NODE_ENV, SERVER_URL } = process.env;\nconst API_URL = NODE_ENV === 'production' ? SERVER_URL : api_url;\n\nexport default async function request({\n  url, method, body, query, headers\n}) {\n  try {\n    const queryBody = constructUrlBody(query);\n    const requestUrl = `${API_URL}${url}?${queryBody}`\n    const resp = await fetch(requestUrl, {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers\n      },\n      body: JSON.stringify(body),\n    });\n\n    const { status, data, error } = await resp.json();\n    if (resp.status >= 500) {\n      return handleError(\"Uh oh, something's not right. Try again later.\");\n    }\n\n    if (resp.status >= 400 && error) {\n      return handleError(error);\n    }\n\n    return { status, data, error };\n  } catch (error) {\n    handleError(error.message);\n  }\n}\n\nfunction constructUrlBody(data) {\n  if (!data) {\n    return \"\";\n  }\n\n  let ulrBody = [];\n  for (let name in data) {\n    // skip inherited and functions\n    if (!data.hasOwnProperty(name) || typeof name === 'function') {\n      continue;\n    }\n    let value = data[name];\n    if (!value) {\n      continue; // skip null/undefined\n    }\n    value = value.toString();\n    name = encodeURIComponent(name.replace(' ', '+'));\n    value = encodeURIComponent(value.replace(' ', '+'));\n    ulrBody.push(`${name}=${value}`);\n  }\n\n  return ulrBody.join('&');\n}","import React from 'react';\nimport {\n  Col,\n  Row,\n  Typography,\n} from 'antd';\n\nimport Page from '../../../components/Page';\n\nexport default function AuthPage({title, children}) {\n  return (\n    <Page>\n      <Row justify=\"center\">\n        <Col>\n          <img src=\"orient-insurance/orient-logo.png\" alt=\"Company logo\"\n            style={{\n              margin: '0 auto',\n              display: 'block',\n              borderRadius: '10%',\n              width: '75px',\n              marginBottom: '1em',\n            }} />\n          <Typography.Title level={3}>{title}</Typography.Title>\n        </Col>\n      </Row>\n      {children}\n    </Page>\n  );\n}","import React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n} from 'antd';\n\nexport default function PasswordDetails() {\n  return (\n    <Card>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Old password\"\n            name=\"oldPassword\"\n            rules={[\n              { required: true, message: 'Password is required' },\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"New password\"\n            name=\"newPassword\"\n            rules={[\n              { required: true, message: 'Password is required' },\n              { \n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=^.{8,45}$)/,\n                message: `Password should contain numbers, letters and \n                at least 8 characters`\n              }\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Confirm new password\"\n            dependencies={['newPassword']}\n            hasFeedback\n            name=\"newPasswordConfirm\"\n            rules={[\n              { required: true, message: 'Password is required' },\n              ({getFieldValue}) => ({\n                validator(rule, value) {\n                  if (getFieldValue('newPassword') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject('Passwords do not match.');\n                }\n              })\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Button,\n  Col,\n  Form,\n  Row,\n} from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport AuthPage from './parts/AuthPage';\nimport PasswordDetails from './parts/PasswordDetails';\nimport { changePassword } from '../../util/http/admins';\n\nimport '../Form.css';\n\nexport default function ChangePassword({ addError }) {\n  const location = useLocation();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [changeSuccess, setChangeSuccess] = useState(false);\n  const submitPassword = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await changePassword({\n        ...location?.state,\n        ...values,\n      });\n      if (resp && resp.data) {\n        form.resetFields();\n        setChangeSuccess(true);\n      } else if (resp && resp.error) {\n        addError(resp.error);\n      }\n    } catch (error) {\n      console.log('An error occurred', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AuthPage title=\"Change password\">\n      <Row justify=\"center\">\n        <Col xs={20} sm={14} md={10} lg={8} xl={6}>\n          {changeSuccess ?\n            <div>\n              Password change successful. Proceed to <Link to=\"/login\">login</Link>\n            </div> :\n            <Form className=\"OForm\"\n              form={form}>\n              <PasswordDetails />\n              <Row justify=\"space-between\">\n                <Link to=\"/login\">\n                  <Button type=\"link\">Login</Button>\n                </Link>\n                <Button\n                  type=\"primary\"\n                  onClick={submitPassword}\n                  loading={loading}>\n                  Submit\n              </Button>\n              </Row>\n            </Form>\n          }\n        </Col>\n      </Row>\n    </AuthPage>\n  );\n}","import React from \"react\";\nimport { Col } from \"antd\";\n\nexport default function InputCol({ children }) {\n  return (\n    <Col xs={24} sm={12} lg={8}>\n      {children}\n    </Col>\n  );\n}\n","import React from \"react\";\nimport { Card, Form, Input, Row } from \"antd\";\n\nimport InputCol from \"../../../components/InputCol\";\n\nconst nameReg = {\n  pattern: /^[a-zA-Z]{2,}$/,\n  message: \"Invalid value\",\n};\n\nexport default function AdminDetails() {\n  return (\n    <Card title=\"Admin details\">\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            name=\"firstName\"\n            label=\"First name\"\n            rules={[\n              {\n                required: true,\n                message: \"First name is required\",\n              },\n              nameReg,\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item name=\"middleName\" label=\"Middle name\" rules={[nameReg]}>\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            name=\"lastName\"\n            label=\"Last name\"\n            rules={[\n              {\n                required: true,\n                message: \"Last name is required\",\n              },\n              nameReg,\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n      </Row>\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            label=\"Address\"\n            name=\"addressNumber\"\n            rules={[\n              { required: true, message: \"Address number is required\" },\n              {\n                pattern: /^[a-zA-Z0-9]{1,}$/,\n                message: \"Address number is invalid\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Postal code\"\n            name=\"addressCode\"\n            rules={[\n              { required: true, message: \"Postal code is required\" },\n              {\n                pattern: /^\\d{1,}$/,\n                message: \"Postal code should be a number\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Town\"\n            name=\"addressTown\"\n            rules={[\n              { required: true, message: \"Address town is required\" },\n              {\n                pattern: /^[a-zA-Z]{2,}$/,\n                message: \"Town name is invalid\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n      </Row>\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            label=\"ID/Passport number\"\n            name=\"idNumber\"\n            rules={[\n              { required: true, message: \"ID number is required\" },\n              {\n                pattern: /^[0-9]{1,}$/,\n                message: \"ID/Passport should be a number\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              { required: true, message: \"Email is required\" },\n              { type: \"email\", message: \"Invalid email\" },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Phone number\"\n            name=\"phoneNumber\"\n            rules={[\n              { required: true, message: \"Phone number is required\" },\n              {\n                pattern: /^0(7\\d{1}|20)\\d{7}$/,\n                message: \"Invalid phone number\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n      </Row>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Col, Form, Button, Row } from \"antd\";\n\nimport AdminDetails from \"./parts/AdminDetails\";\nimport Page from \"../../components/Page\";\n\nimport { postAdmin } from \"../../util/http/admins\";\n\nimport \"../Form.css\";\n\nexport default function NewAdminForm({ addSuccess, addError }) {\n  const pageTitle = \"Register new admin\";\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const submitAdmin = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await postAdmin(values);\n      if (resp && resp.data) {\n        addSuccess(\"Data submitted successfully\");\n        form.resetFields();\n      } else if (resp && resp.error) {\n        addError(resp.error);\n      }\n    } catch (error) {\n      addError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Page pageTitle={pageTitle}>\n      <Row justify=\"center\">\n        <Col>\n          <Form className=\"OForm\" form={form}>\n            <AdminDetails />\n            <Row justify=\"end\">\n              <Button type=\"primary\" onClick={submitAdmin} loading={loading}>\n                Save\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n","import React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Checkbox,\n} from 'antd';\n\nexport default function LoginDetails() {\n  return (\n    <Card>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              { required: true, message: 'Email is required' },\n              { type: 'email', message: 'Invalid email' }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              { required: true, message: 'Password is required' },\n              // { pattern: /^$/, message: 'Password should contain numbers and letters' }\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item\n        name=\"rememberMe\"\n        valuePropName=\"checked\"\n        extra={<span>Remember me</span>}\n        className=\"RememberMeInput\"\n      >\n        <Checkbox defaultChecked={false} />\n      </Form.Item>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Col,\n  Form,\n  Button,\n  Row,\n} from 'antd';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport AuthPage from './parts/AuthPage';\nimport LoginDetails from './parts/LoginDetails';\n\nimport { login as adminLogin } from '../../util/http/admins';\n\nimport '../Form.css';\n\nexport default function Login({ login, addError, auth }) {\n  const history = useHistory();\n  const location = useLocation();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const loginAdmin = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await adminLogin(values);\n      if (resp && resp.error) {\n        if (resp.error?.accState === 'NEEDS_RESET') {\n          addError('You need to change your password');\n          history.push({\n            pathname: '/change-password',\n            state: {\n              adminId: resp.error.id\n            }\n          });\n        } else {\n          addError(resp.error);\n        }\n      } else if (resp && resp.data) {\n        form.resetFields();\n        login({\n          rememberMe: values.rememberMe,\n          ...resp.data\n        });\n        history.push(location?.state?.attemptedRoute || '/app');\n      }\n    } catch (error) {\n      console.log('An error occurred', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!!auth?.token) {\n    return <Redirect to=\"/app\" />\n  }\n\n  return (\n    <AuthPage title=\"Admin login\">\n      <Row justify=\"center\">\n        <Col xs={20} sm={14} md={10} lg={8} xl={6}>\n          <Form className=\"OForm\"\n            form={form}>\n            <LoginDetails />\n            <Row justify=\"end\">\n              <Button\n                type=\"primary\"\n                onClick={loginAdmin}\n                loading={loading}>\n                Log in\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </AuthPage>\n  );\n}","import React from 'react';\nimport { Layout, Menu, Divider } from 'antd';\nimport {\n  AuditOutlined,\n  BankOutlined,\n  CopyOutlined,\n  DatabaseOutlined,\n  DiffOutlined,\n  FileAddOutlined,\n  PlusCircleOutlined,\n  RedoOutlined,\n  UserOutlined,\n  UsergroupAddOutlined\n} from '@ant-design/icons';\n\nimport './Osider.css';\nimport { Link } from 'react-router-dom';\n\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default function OSider({ collapsed, open=true }) {\n  return (\n    <Sider trigger={null} collapsible collapsed={collapsed}\n      className={open ? \"open\" : \"\"}>\n      <div className=\"logo\">\n        <img src=\"/orient-insurance/orient-logo.png\" alt=\"Company logo\" />\n      </div>\n      <Menu theme=\"dark\" mode=\"inline\">\n        <SubMenu\n          key=\"sub1\"\n          title={\n            <span>\n              <UserOutlined />\n              <span>Clients</span>\n            </span>\n          }>\n          <Menu.Item key=\"1\">\n            <Link to=\"/app/clients/new\">\n              <PlusCircleOutlined />\n              <span>New client</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Link to=\"/app/clients\">\n              <DatabaseOutlined />\n              <span>List clients</span>\n            </Link>\n          </Menu.Item>\n        </SubMenu>\n\n        <SubMenu\n          key=\"sub2\"\n          title={\n            <span>\n              <BankOutlined />\n              <span>Issuers</span>\n            </span>\n          }>\n          <Menu.Item key=\"3\">\n            <Link to=\"/app/insurers/new\">\n              <FileAddOutlined />\n              <span>New issuer</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"4\">\n            <Link to=\"/app/insurers\">\n              <AuditOutlined />\n              <span>List issuers</span>\n            </Link>\n          </Menu.Item>\n        </SubMenu>\n\n        <SubMenu\n          key=\"sub3\"\n          title={\n            <span>\n              <CopyOutlined />\n              <span>Reports</span>\n            </span>\n          }>\n          <Menu.Item key=\"5\">\n            <Link to=\"/app/reports/applications/new\">\n              <DiffOutlined />\n              <span>New applications</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"6\">\n            <Link to=\"/app/reports/applications/renewals\">\n              <RedoOutlined />\n              <span>Renewal applications</span>\n            </Link>\n          </Menu.Item>\n        </SubMenu>\n        <Divider />\n        <Menu.Item key=\"7\">\n          <Link to=\"/app/admins/new\">\n            <UsergroupAddOutlined />\n            <span>Add admin</span>\n          </Link>\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  );\n}","const titleCase = (str) => {\n  str = str.split(\" \")\n  return str.map(s => {\n      s = s.split(\"\")\n      s[0] = s[0].toUpperCase()\n      return s.join('')\n  }).join(\" \")\n};\n\nexport default titleCase;","import React, {useState, useEffect} from 'react';\nimport { \n  Layout,\n  Popover,\n  Button,\n  Grid\n} from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  LogoutOutlined,\n  MenuOutlined,\n  CloseOutlined\n} from '@ant-design/icons';\n\nimport titleCase from '../util/titleCase';\nimport { useHistory } from 'react-router-dom';\n\nconst { Header } = Layout;\nconst { useBreakpoint } = Grid;\n\nexport default function OHeader({\n  collapsed,\n  toggle,\n  logout,\n  user,\n  open,\n  toggleOpen\n}) {\n  const screens = useBreakpoint();\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\n  \n  useEffect(() => {\n    if (!screens.md) {\n      setIsSmallScreen(true);\n    } else {\n      setIsSmallScreen(false);\n    }\n  }, [screens]);\n\n  const history = useHistory();\n  const onLogout = () => {\n    logout();\n    history.push('/login');\n  };\n\n  return (\n    <Header className=\"site-layout-background\" style={{\n      display: 'flex',\n      padding: '0 3em 0 0',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    }}>\n      {isSmallScreen || React.createElement(collapsed ?\n        MenuUnfoldOutlined : MenuFoldOutlined, {\n        className: 'trigger',\n        onClick: toggle,\n      })}\n      {isSmallScreen && React.createElement(open ?\n        CloseOutlined : MenuOutlined, {\n        className: 'trigger',\n        onClick: toggleOpen,\n      })}\n      <Popover\n        trigger=\"click\"\n        placement=\"bottomRight\"\n        title={titleCase(`${user.firstName} ${user.lastName}`)}\n        content={\n          <Button\n            block={true}\n            icon={<LogoutOutlined />}\n            type=\"danger\"\n            onClick={onLogout}\n          >Logout</Button>\n        }\n      >\n        {React.createElement(UserOutlined)}\n      </Popover>\n    </Header>\n  );\n}","import { connect } from 'react-redux';\n\nimport OHeader from '../../components/OHeader';\nimport { logout } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  user: state.auth,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(logout()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OHeader);","import request from './helpers/request';\n\nconst BASE_URL = '/clients';\n\nexport async function postClient(client) {\n  const newClient = function (client) {\n    return {\n      firstName: client.firstName,\n      middleName: client.middleName,\n      lastName: client.lastName,\n      email: client.email,\n      idNumber: client.idNumber,\n      phoneNumber: client.phoneNumber,\n      addressNumber: client.addressNumber,\n      addressCode: client.addressCode,\n      addressTown: client.addressTown,\n      kraPin: client.kraPin,\n      insurer: client.insurer,\n      occupation: client.occupation,\n    };\n  }(client);\n\n  const policy = function (client) {\n    return {\n      policyNumber: client.policyNumber,\n      policyPeriod: client.policyPeriod,\n      sumInsured: client.sumInsured,\n      premiumRate: client.premiumRate,\n      pvt: client.pvt,\n      excessProtection: client.excessProtection,\n      antiTheftCoverage: client.antiTheftCoverage,\n      rookie: client.rookie,\n      passengersPllCoverage: client.passengersPllCoverage,\n      policyClass: client.policyClass,\n    };\n  }(client);\n\n  if (policy.policyClass === 'vehicle') {\n    policy.vehicle = function (client) {\n      return {\n        registrationNumber: client.registrationNumber,\n        make: client.make,\n        bodyType: client.bodyType,\n        bodyColor: client.bodyColor,\n        manufactureYear: client.manufactureYear,\n        engineNumber: client.engineNumber,\n        chasisNumber: client.chasisNumber,\n        tonnage: client.tonnage,\n        ratingCc: client.ratingCc,\n      };\n    }(client);\n  }\n\n  return await request({\n    url: BASE_URL,\n    method: 'POST',\n    body: { policy, ...newClient },\n    headers: {\n      Authorization: `Bearer ${client.token}`,\n    }\n  });\n}\n\nexport async function loadClients() {\n  return await request({\n    url: BASE_URL,\n    method: 'GET',\n  });\n}\n\nexport async function search(searchTerm) {\n  return await request({\n    url: BASE_URL,\n    method: 'GET',\n    query: {\n      search: searchTerm\n    }\n  });\n}\n\nexport async function getById({\n  clientId\n}) {\n  return await request({\n    url: `${BASE_URL}/${clientId}`,\n    method: 'GET',\n  });\n}","import React, { useState, useEffect } from 'react';\nimport {\n  Col,\n  List,\n  Row,\n  Input,\n} from 'antd';\nimport { CaretRightOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Page from '../../components/Page';\nimport { search, loadClients } from '../../util/http/clients';\nimport titleCase from '../../util/titleCase';\n\nconst { Search } = Input;\n\nexport default function ClientList({ clients, updateClients }) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  const [innnerClients, setInnerClients] = useState(clients);\n\n  useEffect(() => {\n    if (clients.length < 20) {\n      try {\n        (async () => {\n          const res = await loadClients();\n          if (!res) {\n            return\n          };\n          \n          updateClients(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR clients', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ?\n      clients.filter(i => {\n        return i.firstName.match(term) || i.lastName.match(term) ||\n          i.middleName.match(term)\n      }) :\n      clients;\n    setInnerClients(match);\n  }, [term, clients]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n\n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updateClients(resp.data);\n    }\n  };\n  return (\n    <Page pageTitle=\"Clients\">\n      <Row justify=\"center\">\n        <Col flex=\"auto\">\n          <Row justify=\"center\">\n            <Col xs={24} sm={18} lg={12}>\n              <Search placeholder=\"client name\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col xs={24} lg={20}>\n              <List\n                itemLayout=\"horizontal\"\n                dataSource={innnerClients}\n                renderItem={item => {\n                  const { firstName, lastName } = item;\n                  return (\n                    <Link to={{\n                      pathname: `/app/clients/${item.id}`,\n                      state: {\n                        prevPath: location.pathname\n                      }\n                    }}>\n                      <List.Item>\n                        <List.Item.Meta\n                          title={titleCase(`${firstName} ${lastName}`)}\n                          description={\n                            \"Member since \" +\n                            new Date(item.createdAt).toLocaleDateString()\n                          }\n                        />\n                        <div>\n                          <CaretRightOutlined />\n                        </div>\n                      </List.Item>\n                    </Link>\n                  );\n                }}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n","import React from \"react\";\nimport { Card, Form, Input, Row } from \"antd\";\n\nimport InputCol from '../../../components/InputCol';\n\nconst nameReg = {\n  pattern: /^[a-zA-Z]{2,}$/,\n  message: \"Invalid value\",\n};\n\nexport default function ClientDetails() {\n  return (\n    <Card title=\"Client details\">\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            name=\"firstName\"\n            label=\"First name\"\n            rules={[\n              {\n                required: true,\n                message: \"First name is required\",\n              },\n              nameReg,\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item name=\"middleName\" label=\"Middle name\" rules={[nameReg]}>\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            name=\"lastName\"\n            label=\"Last name\"\n            rules={[\n              {\n                required: true,\n                message: \"Last name is required\",\n              },\n              nameReg,\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n      </Row>\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            label=\"Address\"\n            name=\"addressNumber\"\n            rules={[\n              { required: true, message: \"Address number is required\" },\n              {\n                pattern: /^[a-zA-Z0-9]{1,}$/,\n                message: \"Address number is invalid\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Postal code\"\n            name=\"addressCode\"\n            rules={[\n              { required: true, message: \"Postal code is required\" },\n              {\n                pattern: /^\\d{1,}$/,\n                message: \"Postal code should be a number\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Town\"\n            name=\"addressTown\"\n            rules={[\n              { required: true, message: \"Address town is required\" },\n              {\n                pattern: /^[a-zA-Z]{2,}$/,\n                message: \"Town name is invalid\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n      </Row>\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            label=\"ID/Passport number\"\n            name=\"idNumber\"\n            rules={[\n              { required: true, message: \"ID number is required\" },\n              {\n                pattern: /^[0-9]{1,}$/,\n                message: \"ID/Passport should be a number\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              { required: true, message: \"Email is required\" },\n              { type: \"email\", message: \"Invalid email\" },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Phone number\"\n            name=\"phoneNumber\"\n            rules={[\n              { required: true, message: \"Phone number is required\" },\n              {\n                pattern: /^0(7\\d{1}|20)\\d{7}$/,\n                message: \"Invalid phone number\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n      </Row>\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            label=\"Occupation\"\n            name=\"occupation\"\n            rules={[\n              { required: true, message: \"Occupation is required\" },\n              {\n                pattern: /^[a-zA-Z]{2,}$/,\n                message: \"Occupation should be a string\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"KRA pin\"\n            name=\"kraPin\"\n            rules={[\n              { required: true, message: \"KRA pin is required\" },\n              {\n                pattern: /^[a-zA-Z0-9]{11}$/,\n                message: \"KRA Pin should be 11 characters\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n      </Row>\n    </Card>\n  );\n}\n","import React from 'react';\nimport {\n  Card,\n  Col,\n  DatePicker,\n  Form,\n  Input,\n  Row,\n} from 'antd';\n\nexport default function VehicleDetails() {\n  return (\n    <Card\n      title=\"Vehicle details\">\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Registration number\"\n            name=\"registrationNumber\"\n            rules={[\n              { required: true, message: 'Vehicle registration no is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Make\"\n            name=\"make\"\n            rules={[\n              { required: true, message: 'Vehicle make is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Body type\"\n            name=\"bodyType\"\n            rules={[\n              { required: true, message: 'Vehicle body type is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Body color\"\n            name=\"bodyColor\"\n            rules={[\n              { required: true, message: 'Vehicle body color is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Chasis number\"\n            name=\"chasisNumber\"\n            rules={[\n              { required: true, message: 'Vehicle chasis number is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Engine number\"\n            name=\"engineNumber\"\n            rules={[\n              { required: true, message: 'Vehicle body type is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Rating (cc)\"\n            name=\"ratingCc\"\n            rules={[\n              { required: true, message: 'Vehicle rating (cc) is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Tonnage\"\n            name=\"tonnage\"\n            rules={[\n              { required: true, message: 'Vehicle tonnage is required' }\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Year of manufacture\"\n            name=\"manufactureYear\"\n            rules={[\n              { required: true, message: 'Vehicle year of manufacture is required' }\n            ]}\n          >\n            <DatePicker.YearPicker />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n\n  );\n}","import React, { useState } from \"react\";\nimport {\n  Card,\n  Divider,\n  Form,\n  Input,\n  Row,\n  DatePicker,\n  Checkbox,\n  InputNumber,\n  Typography,\n  Radio,\n} from \"antd\";\n\nimport InputCol from \"../../../components/InputCol\";\nimport VehicleDetails from \"./VehicleDetails\";\n\nconst { Text } = Typography;\n\nexport default function PolicyDetails() {\n  const [isForVehicle, setIsForVehicle] = useState(false);\n  const [startDate, setStartDate] = useState(null);\n\n  const onClassChange = (event) => {\n    const { value } = event.target;\n    if (value === \"fire\") {\n      return setIsForVehicle(false);\n    }\n    setIsForVehicle(true);\n  };\n\n  const onPeriodStartChange = (date) => setStartDate(date);\n\n  const restrictEndDate = (currentDate) => {\n    if (startDate) {\n      return currentDate.isSameOrBefore(startDate);\n    }\n    return currentDate.isSameOrBefore();\n  };\n\n  return (\n    <Card title=\"Policy details\">\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            label=\"Policy number\"\n            name=\"policyNumber\"\n            rules={[{ required: true, message: \"Policy number is required\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item label=\"Policy Period\">\n            <Input.Group>\n              <Form.Item\n                name={[\"policyPeriod\", \"start\"]}\n                help=\"Select start date\"\n                rules={[{ required: true, message: \"Start date required\" }]}\n              >\n                <DatePicker\n                  disabledDate={(currentDate) => currentDate.isBefore()}\n                  onChange={onPeriodStartChange}\n                />\n              </Form.Item>\n              <Form.Item\n                name={[\"policyPeriod\", \"end\"]}\n                help=\"Select end date\"\n                rules={[{ required: true, message: \"End date required\" }]}\n              >\n                <DatePicker disabledDate={restrictEndDate} />\n              </Form.Item>\n            </Input.Group>\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Sum insured\"\n            name=\"sumInsured\"\n            rules={[{ required: true, message: \"Sum is required\" }]}\n          >\n            <InputNumber min={1} />\n          </Form.Item>\n        </InputCol>\n      </Row>\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            label=\"PVT\"\n            name=\"pvt\"\n            rules={[{ required: true, message: \"PVT is required\" }]}\n          >\n            <InputNumber min={1} />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Premium rate\"\n            name=\"premiumRate\"\n            rules={[{ required: true, message: \"Premium rate is required\" }]}\n          >\n            <InputNumber min={1} />\n          </Form.Item>\n        </InputCol>\n      </Row>\n      <Row>\n        <InputCol>\n          <Form.Item\n            label=\"Select the insurance class\"\n            name=\"policyClass\"\n            rules={[{ required: true, message: \"Please select policy class\" }]}\n          >\n            <Radio.Group onChange={onClassChange}>\n              <Radio value={\"fire\"}>Fire</Radio>\n              <Radio value={\"vehicle\"}>Vehicle</Radio>\n            </Radio.Group>\n          </Form.Item>\n        </InputCol>\n      </Row>\n      {isForVehicle && (\n        <div>\n          <Divider />\n          <VehicleDetails />\n          <Text strong style={{ marginBottom: \"0.7em\" }}>\n            Extension\n          </Text>\n          <Row className=\"OFormRow\">\n            <InputCol>\n              <Form.Item\n                help=\"5% with a min of Kshs30,000/=\"\n                label=\"Add excess protection\"\n                name=\"excessProtection\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox defaultChecked={false} />\n              </Form.Item>\n            </InputCol>\n            <InputCol>\n              <Form.Item\n                help=\"+ Kshs5000\"\n                label=\"Young/New driver\"\n                name=\"rookie\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox defaultChecked={false} />\n              </Form.Item>\n            </InputCol>\n            <InputCol>\n              <Form.Item\n                label=\"Passengers (PLL)\"\n                name=\"passengersPllCoverage\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox defaultChecked={false} />\n              </Form.Item>\n            </InputCol>\n            <InputCol>\n              <Form.Item\n                help=\"10% antitheft device, 20% no device\"\n                label=\"Theft\"\n                name=\"antiTheftCoverage\"\n                valuePropName=\"checked\"\n              >\n                <Checkbox defaultChecked={false} />\n              </Form.Item>\n            </InputCol>\n          </Row>\n        </div>\n      )}\n      {/* <Divider />\n\n      <section className=\"OExtContainer\">\n        <div>Windscreen</div>\n        <div>\n          <Text strong>0.00</Text>\n        </div>\n        <div>RADIO</div>\n        <div>\n          <Text strong>0.00</Text>\n        </div>\n\n      </section> */}\n    </Card>\n  );\n}\n","import request from './helpers/request';\n\nconst BASE_URL = '/policies';\n\nexport async function postPolicy(policy) {\n  const policyDetails = function (policy) {\n    return {\n      insurer: policy.insurer,\n      client: policy.client,\n      policyNumber: policy.policyNumber,\n      policyPeriod: policy.policyPeriod,\n      sumInsured: policy.sumInsured,\n      premiumRate: policy.premiumRate,\n      pvt: policy.pvt,\n      excessProtection: policy.excessProtection,\n      antiTheftCoverage: policy.antiTheftCoverage,\n      rookie: policy.rookie,\n      passengersPllCoverage: policy.passengersPllCoverage,\n      policyClass: policy.policyClass,\n    };\n  }(policy);\n\n  if (policyDetails.policyClass === 'vehicle') {\n    policyDetails.vehicle = function (policy) {\n      return {\n        registrationNumber: policy.registrationNumber,\n        make: policy.make,\n        bodyType: policy.bodyType,\n        bodyColor: policy.bodyColor,\n        manufactureYear: policy.manufactureYear,\n        engineNumber: policy.engineNumber,\n        chasisNumber: policy.chasisNumber,\n        tonnage: policy.tonnage,\n        ratingCc: policy.ratingCc,\n      };\n    }(policy);\n  }\n\n  return await request({\n    url: BASE_URL,\n    method: 'POST',\n    body: policyDetails,\n    headers: {\n      Authorization: `Bearer ${policy.token}`,\n    }\n  });\n}\n\nexport async function approvePolicy({ policyId, token }) {\n  return await request({\n    url: `${BASE_URL}/${policyId}`,\n    method: 'PUT',\n    body: { approved: true },\n    headers: {\n      Authorization: `Bearer ${token}`,\n    }\n  });\n}\n\nexport async function search({\n  policyNumber,\n  client,\n  insurer,\n  type\n}) {\n  return await request({\n    url: BASE_URL,\n    method: 'GET',\n    query: {\n      search: policyNumber,\n      client,\n      insurer,\n      type\n    }\n  });\n}\n\nexport async function getById({\n  policyId\n}) {\n  return await request({\n    url: `${BASE_URL}/${policyId}`,\n    method: 'GET',\n  });\n}\n\nexport async function getVehicle({\n  policyId\n}) {\n  return await request({\n    url: `${BASE_URL}/${policyId}/vehicle`,\n    method: 'GET',\n  });\n}","import React from 'react';\n\nimport './Overlay.css';\nimport { Row, Card, Col } from 'antd';\n\nexport default function Profile({ children }) {\n  return (\n    <Row justify=\"center\" style={{\n      paddingTop: '2em'\n    }}>\n      <Col xs={24}>\n        <Card>\n          {children}\n        </Card>\n      </Col>\n    </Row>\n  );\n}","import { connect } from 'react-redux';\n\nimport Subscriptions from '../../components/Subscriptions';\n\nconst mapStateToProps = (state, { clientId, insurerId }) => {\n  if (clientId != null) {\n    return {\n      subscriptions: state.policies.filter(p => p.client === clientId)\n    }\n  }\n  return {\n    subscriptions: state.policies.filter(p => p.insurer === insurerId)\n  }\n};\n\nexport default connect(\n  mapStateToProps\n)(Subscriptions);","import React, { useEffect } from 'react';\nimport { Card, List } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CaretRightOutlined } from '@ant-design/icons';\n\nexport default function Subscriptions({ \n  subscriptions,\n  fallback,\n  extra = () => { },\n  onMount,\n}) {\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      await onMount(subscriptions);\n    })()\n  }, []);\n\n  if (!subscriptions.length && fallback) {\n    return (\n      <div>\n        {extra()}\n        {fallback()}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {extra()}\n      <Card title=\"Subscriptions\">\n        <List\n          size=\"small\"\n          itemLayout=\"horizontal\"\n          dataSource={subscriptions}\n          renderItem={item => (\n            <Link to={{\n              pathname: `/app/policies/${item.id}`,\n              state: {\n                prevPath: location.pathname\n              }\n            }}>\n              <List.Item>\n                <List.Item.Meta\n                  title={String(item.policyNumber).toUpperCase()}\n                />\n                <div>\n                  <CaretRightOutlined />\n                </div>\n              </List.Item>\n            </Link>\n          )}\n        />\n      </Card>\n    </div>\n  );\n}","import React from 'react';\nimport { Row, Col, Typography, Button } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport './ProfileHeader.css';\n\nconst { Text, Title } = Typography;\n\nexport default function ProfileHeader({ label, title, fallbackUrl }) {\n  const history = useHistory();\n  const location = useLocation();\n  const onClose = () => history.push(location?.state?.prevPath || fallbackUrl);\n\n  return (\n    <Row className=\"ProfileHeader\">\n      <Col flex=\"auto\">\n        <Text disabled>{label}:</Text>\n        <Title level={3}>{title}</Title>\n      </Col>\n      <Col>\n        <Button\n          danger\n          size=\"small\"\n          shape=\"circle\" icon={<CloseOutlined />}\n          onClick={onClose} />\n      </Col>\n    </Row>\n  );\n}","import React from 'react';\n\nimport ProfileHeader from './ProfileHeader';\n\nexport default function ProfileContainer(props) {\n  const header = props.header || true;\n  return (\n    <div>\n      {header &&\n        <ProfileHeader {...props} />\n      }\n      {props.children}\n    </div>\n  );\n}","import React from \"react\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Text } = Typography;\n\nexport default function Detail({ title, content, children }) {\n  return (\n    <Row>\n      <Col xs={9} sm={6} md={5}>\n        <Text>{title}</Text>\n      </Col>\n      <Col flex>\n        {!!content && <Text strong>{content}</Text>}\n        {children}\n      </Col>\n    </Row>\n  );\n}\n","import React from 'react';\n\nimport ProfileContainer from \"./ProfileContainer\";\n\nimport './ProfileSkeleton.css';\n\nexport default function ProfileSkeleton() {\n  return (\n    <ProfileContainer header={false}>\n      <div className=\"ProfileSkeleton\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </ProfileContainer>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Typography, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport Subscriptions from \"../../../containers/common/Subscriptions\";\nimport ProfileContainer from \"../../../components/ProfileContainer\";\nimport Detail from \"../../../components/Detail\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { search } from \"../../../util/http/policies\";\nimport { getById } from \"../../../util/http/clients\";\nimport ProfileSkeleton from \"../../../components/ProfileSkeleton\";\nimport titleCase from \"../../../util/titleCase\";\n\nconst { Text } = Typography;\n\nexport default function ClientProfile({ client, updatePolicies, addClient }) {\n  const { clientId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      if (!client) {\n        const resp = await getById({\n          clientId,\n        });\n\n        if (resp && resp.data) {\n          addClient(resp.data);\n        } else {\n          history.replace(\"/clients\");\n        }\n      }\n    })();\n  }, [client]);\n\n  const loadPolicies = async (subs) => {\n    if (subs.length <= 2) {\n      const resp = await search({\n        client: client.id,\n      });\n\n      if (resp && resp.data) {\n        updatePolicies(resp.data);\n      }\n    }\n  };\n\n  if (!client) {\n    return <ProfileSkeleton />;\n  }\n\n  return (\n    <ProfileContainer\n      label=\"Client name\"\n      title={titleCase(`${client.firstName} ${client.lastName}`)}\n      fallbackUrl=\"/app/clients\"\n    >\n      <div\n        style={{\n          paddingLeft: \"1em\",\n          marginBottom: \"1.5em\",\n        }}\n      >\n        <Detail title={\"ID No\"} content={client.idNumber} />\n        <Detail\n          title={\"Address\"}\n          content={titleCase(\n            `${client.addressNumber} ` +\n              `${client.addressTown}, ${client.addressCode}`\n          )}\n        />\n        <Detail title={\"Occupation\"} content={titleCase(client.occupation)} />\n        <Detail title={\"Phone\"} content={client.phoneNumber} />\n        <Detail title={\"Email\"} content={client.email} />\n        <Detail\n          title={\"Member since\"}\n          content={new Date(client.createdAt).toLocaleDateString()}\n        />\n      </div>\n      <Subscriptions\n        clientId={client.id}\n        extra={() => <AddPolicy client={client} />}\n        onMount={loadPolicies}\n      />\n    </ProfileContainer>\n  );\n}\n\nfunction AddPolicy({ client }) {\n  return (\n    <Row\n      justify=\"center\"\n      style={{\n        margin: \"2em auto 2em\",\n      }}\n    >\n      <Col>\n        <Text\n          style={{\n            marginRight: \"1em\",\n          }}\n          strong\n        >\n          Add new policy for client\n        </Text>\n        <Link\n          to={{\n            pathname: \"/app/clients/new\",\n            state: {\n              clientId: client.id,\n            },\n          }}\n        >\n          <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\n        </Link>\n      </Col>\n    </Row>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport ClientProfile from '../../../pages/clients/parts/ClientProfile';\nimport { updatePolicies, addClient } from '../../../redux/actions';\n\nconst mapStateToProp = (state, {clientId}) => ({\n  client: state.clients.find(c => Number(c.id) === Number(clientId))\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicies: (policies) => dispatch(updatePolicies(policies)),\n  addClient: (client) => dispatch(addClient(client))\n});\n\nexport default connect(\n  mapStateToProp,\n  mapDispatchToProps\n)(ClientProfile);","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Profile from '../../components/Profile';\nimport ClientProfile from '../../containers/clients/parts/ClientProfile';\n\nexport default function Client({ clients }) {\n  const { clientId } = useParams();\n\n  return (\n    <Profile>\n      <ClientProfile clientId={clientId} />\n    </Profile>\n  );\n}","import { connect } from 'react-redux';\n\nimport { ClientList } from '../../pages/clients';\nimport { updateClients } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  clients: state.clients\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateClients: (clients) => dispatch(updateClients(clients))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientList);","import { connect } from 'react-redux'\n\nimport { NewClientForm } from \"../../pages/clients\";\nimport {\n  addClient, addVehicle, addPolicy, addSuccess, addError\n} from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  token: state.auth.token\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addClient(client) {\n    dispatch(addClient(client));\n  },\n  addVehicle(vehicle) {\n    dispatch(addVehicle(vehicle));\n  },\n  addPolicy(policy) {\n    dispatch(addPolicy(policy));\n  },\n  addSuccess(success) {\n    dispatch(addSuccess(success));\n  },\n  addError: error => dispatch(addError(error))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewClientForm);","import React, { useState } from \"react\";\nimport { Col, Form, Button, Row } from \"antd\";\nimport { useParams, useLocation } from \"react-router-dom\";\n\nimport ClientDetails from \"./parts/ClientDetails\";\nimport PolicyDetails from \"./parts/PolicyDetails\";\n\nimport Page from \"../../components/Page\";\n\nimport { postClient } from \"../../util/http/clients\";\nimport { postPolicy } from \"../../util/http/policies\";\n\nimport \"../Form.css\";\n\nexport default function NewClientForm({\n  addClient,\n  addPolicy,\n  addVehicle,\n  addSuccess,\n  addError,\n  token,\n}) {\n  const { insurerId } = useParams();\n  const location = useLocation();\n  const clientId = location?.state?.clientId;\n  const pageTitle = clientId ? \"Add policy for client\" : \"Register new client\";\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const wrap = (fn) => {\n    setLoading(true);\n    try {\n      fn().then(() => {\n        addSuccess(\"Data submitted successfully\");\n        form.resetFields();\n      });\n    } catch (error) {\n      addError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const submitClient = () => {\n    wrap(async function wrapped() {\n      const values = await form.validateFields();\n      const resp = await postClient({\n        insurer: insurerId,\n        token,\n        ...values,\n      });\n      if (resp && resp.data) {\n        const { policy, ...client } = resp.data;\n        addClient(client);\n        const { vehicle, ...policyDetails } = policy;\n        addPolicy(policyDetails);\n        !!vehicle && addVehicle(vehicle);\n      } else if (resp && resp.error) {\n        throw Error(resp.error);\n      }\n    });\n  };\n\n  const submitPolicy = () => {\n    wrap(async function wrapped() {\n      const values = await form.validateFields();\n      const resp = await postPolicy({\n        insurer: insurerId,\n        client: clientId,\n        token,\n        ...values,\n      });\n      if (resp && resp.data) {\n        const { vehicle, ...policyDetails } = resp.data;\n        addPolicy(policyDetails);\n        !!vehicle && addVehicle(vehicle);\n      } else if (resp && resp.error) {\n        throw Error(resp.error);\n      }\n    });\n  };\n\n  return (\n    <Page pageTitle={pageTitle}>\n      <Row justify=\"center\">\n        <Col>\n          <Form className=\"OForm\" form={form}>\n            {!clientId && <ClientDetails />}\n            <PolicyDetails />\n            <Row justify=\"end\">\n              <Button\n                type=\"primary\"\n                onClick={clientId ? submitPolicy : submitClient}\n                loading={loading}\n              >\n                Submit\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n","import request from './helpers/request';\n\nconst BASE_URL = '/insurers';\n\nexport async function postInsurer(insurer) {\n  const {token, ...rest} = insurer;\n  return await request({\n    url: BASE_URL,\n    method: 'POST',\n    body: rest,\n    headers: {\n      Authorization: `Bearer ${token}`,\n    }\n  })\n}\n\nexport async function loadInsurers() {\n  return await request({\n    url: BASE_URL,\n    method: 'GET'\n  });\n}\n\nexport async function search(searchTerm) {\n  return await request({\n    url: BASE_URL,\n    method: 'GET',\n    query: {\n      search: searchTerm\n    }\n  });\n}\n\nexport async function getById({\n  insurerId\n}) {\n  return await request({\n    url: `${BASE_URL}/${insurerId}`,\n    method: 'GET',\n  });\n}","import React, { useEffect, useState } from 'react';\nimport { Col, List, Row, Input, } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CaretRightOutlined } from '@ant-design/icons';\n\nimport Page from '../../components/Page';\nimport { loadInsurers, search } from '../../util/http/insurers';\nimport titleCase from '../../util/titleCase';\n\nconst { Search } = Input;\n\nexport default function InsurersList({ insurers, updateInsurers }) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  const [innerInsurers, setInnerInsurers] = useState(insurers);\n\n  useEffect(() => {\n    if (insurers.length < 20) {\n      try {\n        (async () => {\n          const res = await loadInsurers();\n          if (!res) return;\n          updateInsurers(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR insurers', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ? insurers.filter(i => i.name.match(term)) : insurers;\n    setInnerInsurers(match);\n  }, [insurers, term]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updateInsurers(resp.data);\n    }\n  };\n\n  return (\n    <Page pageTitle=\"Registered Insurers\">\n      <Row justify=\"center\">\n        <Col flex=\"auto\">\n          <Row justify=\"center\">\n            <Col xs={24} sm={18} lg={12}>\n              <Search placeholder=\"Insurer name\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col xs={24} lg={20}>\n              <List\n                itemLayout=\"horizontal\"\n                dataSource={innerInsurers}\n                renderItem={item => (\n                  <Link to={{\n                    pathname: `/app/insurers/${item.id}`,\n                    state: {\n                      prevPath: location.pathname\n                    }\n                  }}>\n                    <List.Item>\n                      <List.Item.Meta\n                        title={titleCase(item.name)}\n                        description={\n                          \"Registered \" +\n                          new Date(item.createdAt).toLocaleDateString()\n                        }\n                      />\n                      <div>\n                        <CaretRightOutlined />\n                      </div>\n                    </List.Item>\n                  </Link>\n                )}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Button, Col, Row, Typography } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\n\nimport Subscriptions from \"../../../containers/common/Subscriptions\";\nimport ProfileContainer from \"../../../components/ProfileContainer\";\nimport ProfileSkeleton from \"../../../components/ProfileSkeleton\";\nimport Detail from \"../../../components/Detail\";\nimport { search } from \"../../../util/http/policies\";\nimport { getById } from \"../../../util/http/insurers\";\nimport titleCase from \"../../../util/titleCase\";\n\nconst { Text } = Typography;\n\nexport default function InsurerProfile({\n  insurer,\n  updatePolicies,\n  addInsurer,\n}) {\n  const { insurerId } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    (async () => {\n      if (!insurer) {\n        const resp = await getById({\n          insurerId,\n        });\n        if (resp && resp.data) {\n          addInsurer(resp.data);\n        } else {\n          history.replace(\"/insurers\");\n        }\n      }\n    })();\n  }, [insurer]);\n\n  const loadPolicies = async (subs) => {\n    if (subs.length <= 2) {\n      const resp = await search({\n        insurer: insurer.id,\n      });\n      if (resp && resp.data) {\n        updatePolicies(resp.data);\n      }\n    }\n  };\n\n  if (!insurer) {\n    return <ProfileSkeleton />;\n  }\n\n  return (\n    <ProfileContainer\n      label=\"Insurer name\"\n      title={titleCase(insurer.name)}\n      fallbackUrl=\"/app/insurers\"\n    >\n      <div\n        style={{\n          paddingLeft: \"1em\",\n          marginBottom: \"1.5em\",\n        }}\n      >\n        <Detail\n          title={\"Address\"}\n          content={titleCase(\n            `${insurer.addressNumber} ` +\n              `${insurer.addressTown}, ${insurer.addressCode}`\n          )}\n        />\n        <Detail title={\"Phone\"} content={insurer.phoneNumber} />\n      </div>\n      <Subscriptions\n        insurerId={insurer.id}\n        fallback={() => <AddClient insurer={insurer} />}\n        onMount={loadPolicies}\n      />\n    </ProfileContainer>\n  );\n}\n\nfunction AddClient({ insurer }) {\n  return (\n    <Row\n      justify=\"center\"\n      style={{\n        marginTop: \"4em\",\n      }}\n    >\n      <Col>\n        <Text\n          style={{\n            marginRight: \"1em\",\n          }}\n          strong\n        >\n          This insurer has no clients yet.\n        </Text>\n        <Link\n          to={{\n            pathname: `/app/clients/new/${insurer.id}`,\n          }}\n        >\n          <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\n        </Link>\n      </Col>\n    </Row>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport InsurerProfile from '../../../pages/insurers/parts/InsurerProfile';\nimport { updatePolicies, addInsurer } from '../../../redux/actions';\n\nconst mapStateToProps = (state, { insurerId }) => ({\n  insurer: state.insurers.find(i => Number(i.id) === Number(insurerId))\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicies: (policies) => dispatch(updatePolicies(policies)),\n  addInsurer: (insurer) => dispatch(addInsurer(insurer))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InsurerProfile);","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Profile from '../../components/Profile';\nimport InsurerProfile from '../../containers/insurers/parts/InsurerProfile';\n\nexport default function Insurer() {\n  const { insurerId } = useParams();\n\n  return (\n    <Profile>\n      <InsurerProfile insurerId={insurerId} />\n    </Profile>\n  );\n}","import React from \"react\";\nimport { Card, Row, Form, Input } from \"antd\";\n\nimport InputCol from \"../../../components/InputCol\";\n\nexport default function InsurerDetails() {\n  return (\n    <Card title=\"Vehicle details\">\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            label=\"Issuer name\"\n            name=\"name\"\n            rules={[\n              { required: true, message: \"Insurer name is required\" },\n              {\n                pattern: /^[a-zA-Z0-9\\s]{2,}$/,\n                message:\n                  \"At least 2 characters and no contain special characters.\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Phone number\"\n            name=\"phoneNumber\"\n            rules={[\n              {\n                pattern: /^0(7\\d{1}|20)\\d{7}$/,\n                message: \"Invalid format\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n      </Row>\n      <Row gutter={16}>\n        <InputCol>\n          <Form.Item\n            label=\"Address\"\n            name=\"addressNumber\"\n            rules={[\n              { required: true, message: \"Address number is required\" },\n              {\n                pattern: /^[a-zA-Z0-9\\s]{1,}$/,\n                message: \"Invalid address\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Postal code\"\n            name=\"addressCode\"\n            rules={[\n              { required: true, message: \"Postal code is required\" },\n              {\n                pattern: /^[0-9]{1,}$/,\n                message: \"Value should be a number\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n        <InputCol>\n          <Form.Item\n            label=\"Town\"\n            name=\"addressTown\"\n            rules={[\n              { required: true, message: \"Address town is required\" },\n              {\n                pattern: /^[a-zA-Z\\s]{2,}$/,\n                message: \"Invalid town name\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </InputCol>\n      </Row>\n    </Card>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport { NewInsurerForm } from '../../pages/insurers';\nimport { addInsurer, addSuccess, addError } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  token: state.auth.token\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addInsurer(issuer) {\n    dispatch(addInsurer(issuer));\n  },\n  addSuccess(success) {\n    dispatch(addSuccess(success));\n  },\n  addError: error => dispatch(addError(error))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewInsurerForm);\n","import React, { useState } from \"react\";\nimport { Button, Col, Form, Row } from \"antd\";\n\nimport InsurerDetails from \"./parts/InsurerDetails\";\nimport Page from \"../../components/Page\";\n\nimport { postInsurer } from \"../../util/http/insurers\";\n\nimport \"../Form.css\";\n\nexport default function NewInsurerForm({\n  addInsurer,\n  addSuccess,\n  token,\n  addError,\n}) {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await postInsurer({\n        token,\n        ...values,\n      });\n      if (resp && resp.data) {\n        addInsurer(resp.data);\n        addSuccess(\"Data submitted successfully\");\n        form.resetFields();\n      } else if (resp && resp.error) {\n        addError(resp.error);\n      }\n    } catch (error) {\n      addError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onFinishFailed = ({ values, errorFields }) => {\n    console.log(\"Error\", errorFields);\n  };\n\n  return (\n    <Page pageTitle=\"Register new insurer\">\n      <Row justify=\"center\">\n        <Col>\n          <Form\n            className=\"OForm\"\n            form={form}\n            colon={false}\n            labelAlign=\"left\"\n            scrollToFirstError={true}\n            onFinishFailed={onFinishFailed}\n          >\n            <InsurerDetails />\n            <Row justify=\"end\">\n              <Button type=\"primary\" onClick={onSubmit} loading={loading}>\n                Submit\n              </Button>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport { InsurersList } from '../../pages/insurers';\nimport { updateInsurers } from '../../redux/actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    insurers: state.insurers\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateInsurers: (insurers) => dispatch(updateInsurers(insurers))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InsurersList);","import React, { useState, useEffect } from 'react';\nimport {\n  Divider,\n  Col,\n  Input,\n  List,\n  Row,\n} from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { CaretRightOutlined } from '@ant-design/icons';\n\nimport Page from '../components/Page';\nimport { search, loadInsurers } from '../util/http/insurers';\nimport titleCase from '../util/titleCase';\n\nconst { Search } = Input;\n\nexport default function SelectIssuer({ insurers, updateInsurers }) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  let [innerInsures, setInnerInsurers] = useState(insurers);\n\n  useEffect(() => {\n    if (insurers.length < 20) {\n      try {\n        (async () => {\n          const res = await loadInsurers();\n          if (!res) return;\n          updateInsurers(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR insurers', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ? insurers.filter(i => i.name.match(term)) : insurers;\n    setInnerInsurers(match);\n  }, [term, insurers]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updateInsurers(resp.data);\n    }\n  };\n\n  return (\n    <Page pageTitle=\"Select insurance provider.\">\n      <Row justify=\"center\" style={{ marginTop: '1.5em' }}>\n        <Col flex=\"auto\" xs={24} lg={12}>\n          <Row justify=\"center\">\n            <Col xs={24} sm={18}>\n              <Search placeholder=\"insurer name\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Divider />\n          <Row justify=\"center\">\n            <Col flex=\"auto\" xs ={24} lg={20}>\n              <List\n                dataSource={innerInsures}\n                itemLayout=\"horizontal\"\n                renderItem={(item) => {\n                  const link = {\n                    pathname: `/app/clients/new/${item.id}`,\n                    state: {\n                      clientId: location?.state?.clientId\n                    }\n                  };\n                  return (\n                    <Link to={link}>\n                      <List.Item>\n                        <List.Item.Meta\n                          title={<Link to={link}>{titleCase(item.name)}</Link>}\n                        />\n                        <CaretRightOutlined />\n                      </List.Item>\n                    </Link>\n                  );\n                }\n                }\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}","import { connect } from 'react-redux';\n\nimport SelectInsurer from '../../pages/SelectInsurer';\nimport { updateInsurers } from '../../redux/actions';\n\nconst mapStateToProps = ({ insurers }) => ({\n  insurers,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateInsurers: (insurers) => dispatch(updateInsurers(insurers))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectInsurer);","import { connect } from 'react-redux';\n\nimport { NewAdminForm } from '../../pages/admins';\nimport { addSuccess, addError } from '../../redux/actions';\n\nconst mapDispatchToProps = (dispatch) => ({\n  addSuccess: (success) => dispatch(addSuccess(success)),\n  addError: (error) => dispatch(addError(error))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(NewAdminForm);","import React, { useState, useEffect } from 'react';\nimport {\n  List,\n  Row,\n  Col,\n  Space,\n  Typography,\n  Input\n} from 'antd';\nimport {\n  CaretRightOutlined,\n  CheckCircleOutlined,\n  InfoCircleFilled,\n  CarOutlined,\n  FireOutlined\n} from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Page from '../../components/Page';\nimport { search } from '../../util/http/policies';\n\nconst { Search } = Input;\n\nexport default function NewApplicationList({ newApplications, updatePolicies }) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  const [innerPolicies, setInnerPolicies] = useState(newApplications);\n\n  useEffect(() => {\n    if (newApplications.length < 20) {\n      try {\n        (async () => {\n          const res = await search({\n            type: 'new'\n          });\n          if (!res) return;\n          updatePolicies(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR new policies', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ?\n      newApplications.filter(i => i.policyNumber.match(term)) :\n      newApplications;\n    setInnerPolicies(match);\n  }, [newApplications, term]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n    \n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updatePolicies(resp.data);\n    }\n  };\n\n  return (\n    <Page pageTitle=\"New Applications\">\n      <Row justify=\"center\">\n        <Col flex=\"auto\">\n          <Row justify=\"center\">\n            <Col xs={24} sm={18} lg={12}>\n              <Search placeholder=\"Policy number\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col xs={24} lg={20}>\n              <List\n                itemLayout=\"vertical\"\n                dataSource={innerPolicies}\n                renderItem={item => (\n                  <Link to={{\n                    pathname: `/app/policies/${item.id}`,\n                    state: {\n                      prevPath: location.pathname\n                    }\n                  }}>\n                    <List.Item\n                      actions={\n                        [\n                          <IconText\n                            icon={item.policyClass === 'fire' ?\n                              FireOutlined :\n                              CarOutlined\n                            }\n                            text={`${item.policyClass || 'vehicle'}`}\n                            // type=\"success\"\n                            key=\"policyClass\" />,\n                          ...(item.approved ?\n                            [\n                              <IconText\n                                icon={CheckCircleOutlined}\n                                text=\"Approved\"\n                                type=\"success\"\n                                key=\"approvedIcon\" />\n                            ] :\n                            [\n                              <IconText\n                                icon={InfoCircleFilled}\n                                text=\"Not approved\"\n                                type=\"warning\"\n                                key=\"notApprovedIcon\" />\n                            ])\n                        ]\n                      }\n                      extra={\n                        <CaretRightOutlined />\n                      } >\n                      <List.Item.Meta\n                        title={String(item.policyNumber).toUpperCase()}\n                        description={\n                          \"Applied \" +\n                          new Date(item.createdAt).toLocaleDateString()\n                        }\n                      />\n                    </List.Item>\n                  </Link>\n                )}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n\nfunction IconText({ icon, text, type }) {\n  return (\n    <Space>\n      <Typography.Text type={type}>\n        {React.createElement(icon)}\n        {\" \"}\n        {text}\n      </Typography.Text>\n    </Space>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Col, List, Row, Input } from 'antd';\nimport { CaretRightOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Page from '../../components/Page';\nimport { search } from '../../util/http/policies';\n\nconst { Search } = Input;\n\nexport default function RenewalApplicationsList({\n  renewalApplications,\n  updatePolicies\n}) {\n  const location = useLocation();\n  const [term, setTerm] = useState('');\n  const [innerPolicies, setInnerPolicies] = useState(renewalApplications);\n\n  useEffect(() => {\n    if (renewalApplications.length < 20) {\n      try {\n        (async () => {\n          const res = await search({\n            type: 'renewal'\n          });\n          if (!res) return;\n          updatePolicies(res.data);\n        })()\n      } catch (error) {\n        console.log('FETCH ERROR renewal policies', error);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const match = term ?\n      renewalApplications.filter(i => i.policyNumber.match(term)) :\n      renewalApplications;\n    setInnerPolicies(match);\n  }, [renewalApplications, term]);\n\n  const onSearch = async (searchTerm) => {\n    setTerm(searchTerm);\n    if (!searchTerm) {\n      return;\n    }\n\n    const resp = await search(searchTerm);\n    if (resp && resp.data) {\n      updatePolicies(resp.data);\n    }\n  };\n\n  return (\n    <Page pageTitle=\"Renewal Applications\">\n      <Row justify=\"center\">\n        <Col flex=\"auto\">\n          <Row justify=\"center\">\n            <Col xs={24} sm={18} lg={12}>\n              <Search placeholder=\"Policy number\" onSearch={onSearch} enterButton />\n            </Col>\n          </Row>\n          <Row justify=\"center\">\n            <Col xs={24} lg={20}>\n              <List\n                itemLayout=\"horizontal\"\n                dataSource={innerPolicies}\n                renderItem={item => (\n                  <Link to={{\n                    pathname: `/app/policies/${item.id}`,\n                    state: {\n                      prevPath: location.pathname\n                    }\n                  }}>\n                    <List.Item>\n                      <List.Item.Meta\n                        title={String(item.policyNumber).toUpperCase()}\n                        description={\n                          \"Applied \" +\n                          new Date(item.createdAt).toLocaleDateString()\n                        }\n                      />\n                      <div>\n                        <CaretRightOutlined />\n                      </div>\n                    </List.Item>\n                  </Link>\n                )}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n","export default {\n  policyHoldersFund: 40,\n  trainingLevy: 32,\n  withholdingTax: 160\n};\n","import React from 'react';\nimport { Row, Typography, Col } from 'antd';\n\nimport co from '../../util/companyConstants';\n\nimport './DebitNote.css';\n\nconst { Text, Title } = Typography;\n\nconst basicPremium = 16000.00;\nconst trainingLevy = co.trainingLevy.toFixed(2);\nconst policyHoldersFund = co.policyHoldersFund.toFixed(2);\nconst renewalPremium = basicPremium + co.policyHoldersFund + co.trainingLevy;\n\nconst commission = (basicPremium * 0.1);\nconst withHoldingTax = co.withholdingTax.toFixed(2);\nconst netDue = renewalPremium - commission + co.withholdingTax;\n\nexport default function DebitNote() {\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <Title level={3}>PREMIUM DEBIT NOTE</Title>\n        <Row className=\"AddressRow\">\n          <Col flex=\"auto\">\n            <p><Text strong>Insurer</Text></p>\n            <p>CARE INSURANCE AGENCY</p>\n            <p>P.O BOX 34</p>\n            <p>KERUGOYA</p>\n          </Col>\n          <Col flex=\"auto\">\n            <p><Text strong>Client</Text></p>\n            <p>Martin muthika</p>\n            <p>p.o box 56</p>\n            <p>KERUGOYA</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col flex=\"auto\">\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Policy Number:</Text>\n              </Col>\n              <Col>\n                <Text>EMB/7878/2011</Text>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Regarding:</Text>\n              </Col>\n              <Col>\n                <Text>RENEWAL PREMIUM</Text>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Class:</Text>\n              </Col>\n              <Col>\n                <Text>Vehicle</Text>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Reg No:</Text>\n              </Col>\n              <Col>\n                <Text>KBA 457Y</Text>\n              </Col>\n            </Row>\n          </Col>\n          <Col flex=\"auto\">\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>Cover from:</Text>\n              </Col>\n              <Col>\n                <Text>11/3/2019</Text>\n              </Col>\n            </Row>\n            <Row gutter={24}>\n              <Col span={8} className=\"text-right\">\n                <Text strong>To:</Text>\n              </Col>\n              <Col>\n                <Text>11/3/2020</Text>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row justify=\"end\" style={{marginTop: '2em'}}>\n          <Col span={12}>\n            <Row>\n              <Col span={10}>\n                <Text strong>Basic premium:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>{basicPremium}</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={10}>\n                <Text strong>Policyholders fund:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>{policyHoldersFund}</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={10}>\n                <Text strong>Training levy:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>{trainingLevy}</Text>\n              </Col>\n            </Row>\n            <hr />\n            <Row>\n              <Col span={10}>\n                <Text strong>RENEWAL PREMIUM:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text strong>{\n                  renewalPremium.toFixed(2)\n                }</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={10}>\n                <Text strong>Commission:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>-{commission}</Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col span={10}>\n                <Text strong>Withholding Tax:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text>{withHoldingTax}</Text>\n              </Col>\n            </Row>\n            <hr />\n            <Row>\n              <Col span={10}>\n                <Text strong>Net Amount Due:</Text>\n              </Col>\n              <Col span={8} className=\"text-right\">\n                <Text strong>{netDue.toFixed(2)}</Text>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row style={{ marginTop: '3.5em' }}>\n          <Col flex=\"auto\">\n            Prepared by: <Text strong>ESEDIEM</Text>\n          </Col>\n          <Col flex=\"auto\">\n            Signed By: <Text strong>For and on behalf of KENYA ORIENT INSURANCE LTD</Text>\n          </Col>\n          <Col flex=\"auto\">\n            <Text strong>13-Nov-2019</Text>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n}","import { connect } from 'react-redux';\n\nimport { NewApplicationList } from '../../pages/reports'\nimport { updatePolicies } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  newApplications: state.policies.filter(p => p.type !== 'renewal')\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicies: (policies) => dispatch(updatePolicies(policies))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewApplicationList);","import { connect } from 'react-redux';\n\nimport { RenewalApplicationList } from '../../pages/reports'\nimport { updatePolicies } from '../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  renewalApplications: state.policies.filter(p => p.type === 'renewal')\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicies: (policies) => dispatch(updatePolicies(policies))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RenewalApplicationList);","import React from 'react';\nimport { Switch, Redirect, Route, useRouteMatch } from 'react-router-dom';\n\nimport NewApplicationList from '../containers/reports/NewApplicationList';\nimport RenewalApplicationList from '../containers/reports/RenewalsApplicationList';\nimport { DebitNote } from './reports';\n\nexport default function Applications() {\n  const { path } = useRouteMatch();\n  \n  return (\n    <Switch>\n      <Route path={`${path}/new`}>\n        <NewApplicationList />\n      </Route>\n      <Route path={`${path}/renewals`}>\n        <RenewalApplicationList />\n      </Route>\n      <Route path={`${path}/debit-note`}>\n        <DebitNote />\n      </Route>\n      <Route path=\"*\">\n        <Redirect to={`${path}/new`} />\n      </Route>\n    </Switch>\n  );\n}\n","import React, { useState } from 'react';\nimport { Col, Card, Typography } from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\nimport { LinkOutlined } from '@ant-design/icons';\n\nexport default function Item(props) {\n  const location = useLocation();\n\n  const OCard = ({ title, children }) => {\n    const [mouseOver, setMouseOver] = useState(false);\n    const mouseEnter = () => {\n      if (!props.routerTo) {\n        return null;\n      }\n      setMouseOver(true);\n    };\n    const mouseLeave = () => {\n      if (!props.routerTo) {\n        return null;\n      }\n      setMouseOver(false);\n    };\n\n    return (\n      <Card\n        onMouseEnter={mouseEnter}\n        onMouseLeave={mouseLeave}>\n        <div>\n          <Typography.Title level={4}\n            style={{\n              fontSize: 16\n            }}>\n            {title}\n            {mouseOver && <LinkOutlined\n              style={{\n                marginLeft: '0.5em'\n              }} />}\n          </Typography.Title>\n        </div>\n        {children}\n      </Card>\n    );\n  };\n  return (\n    <Col xs={24} sm={12}>\n      {props.routerTo ?\n        <Link to={{\n          pathname: props.routerTo,\n          state: {\n            prevPath: location.pathname\n          }\n        }}>\n          <OCard {...props}>\n            {props.children}\n          </OCard>\n        </Link> :\n        <OCard {...props}></OCard>}\n    </Col>\n  );\n};","import React, { useEffect } from 'react';\nimport { Col, Row, Typography } from 'antd';\n\nimport Item from './Item';\nimport { getVehicle } from '../../../util/http/policies';\nimport titleCase from '../../../util/titleCase';\n\nconst { Text } = Typography;\n\nexport default function VehicleCard({ policyId, vehicle, addVehicle }) {\n  useEffect(() => {\n    (async () => {\n      if (!vehicle) {\n        const resp = await getVehicle({\n          policyId\n        });\n        if (resp && resp.data) {\n          addVehicle(resp.data);\n        }\n      }\n    })();\n  }, [vehicle]);\n\n  if (!vehicle) {\n    return null;\n  }\n\n  return (\n    <Item\n      title=\"Vehicle\" >\n      <Row>\n        <Col span={10}>\n          <Text>Reg No</Text>\n        </Col>\n        <Col>\n          <Text strong>\n            {String(vehicle.registrationNumber).toUpperCase()}\n          </Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={10}>\n          <Text>Make</Text>\n        </Col>\n        <Col>\n          <Text strong>\n            {titleCase(vehicle.make)}\n          </Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={10}>\n          <Text>Y.o.M</Text>\n        </Col>\n        <Col>\n          <Text strong>\n            {new Date(vehicle.manufactureYear).getFullYear()}\n          </Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={10}>\n          <Text>Rating (cc)</Text>\n        </Col>\n        <Col>\n          <Text strong>\n            {vehicle.ratingCc}\n          </Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={10}>\n          <Text>Body color</Text>\n        </Col>\n        <Col>\n          {/* <Text strong>\n            {vehicle.bodyColor}\n          </Text> */}\n          <ColorPad color={vehicle.bodyColor} />\n        </Col>\n      </Row>\n    </Item>\n  );\n}\n\nfunction ColorPad({ color }) {\n  return (\n    <div style={{\n      display: 'inline-block',\n      width: '1em',\n      height: '1em',\n      backgroundColor: color,\n      borderRadius: 3\n    }}></div>\n  );\n}","import React, { useEffect } from 'react';\nimport { Col, Row, Typography } from 'antd';\n\nimport Item from './Item';\nimport { getById } from '../../../util/http/insurers';\nimport titleCase from '../../../util/titleCase';\n\nexport default function InsurerCard({ insurerId, insurer, addInsurer }) {\n  useEffect(() => {\n    (async () => {\n      if (!insurer) {\n        const resp = await getById({\n          insurerId\n        });\n        if (resp && resp.data) {\n          addInsurer(resp.data);\n        }\n      }\n    })();\n  }, [insurer]);\n\n  if (!insurer) {\n    return null;\n  }\n\n  return (\n    <Item\n      title=\"Insurer\"\n      routerTo={`/app/insurers/${insurer.id}`}>\n      <Row>\n        <Col span={6}>\n          <Typography.Text>Name</Typography.Text>\n        </Col>\n        <Col>\n          <Typography.Text strong>\n            {titleCase(insurer.name)}\n          </Typography.Text>\n        </Col>\n      </Row>\n    </Item>\n  );\n}","import { connect } from 'react-redux';\n\nimport PolicyDetails from '../../../pages/policies/parts/PolicyDetails';\nimport { addVehicle, addInsurer } from '../../../redux/actions';\n\nconst mapStateToProps = (state, { policyId, insurerId }) => ({\n  vehicle: state.vehicles.find(v => Number(v.policy) === Number(policyId)),\n  insurer: state.insurers.find(i => Number(i.id) === Number(insurerId))\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addVehicle: (vehicle) => dispatch(addVehicle(vehicle)),\n  addInsurer: (insurer) => dispatch(addInsurer(insurer))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PolicyDetails);","import React from 'react';\nimport { Row } from 'antd';\n\nimport VehicleCard from './VehicleCard';\nimport InsurerCard from './InsurerCard';\n\nexport default function PolicyDetails(props) {\n  return (\n    <Row gutter={[32, 16]}>\n      {(props.policyClass === 'vehicle') &&\n        <VehicleCard {...props} />\n      }\n      <InsurerCard {...props} />\n    </Row>\n  );\n}","import { connect } from 'react-redux';\n\nimport ClientDetails from '../../../pages/policies/parts/ClientDetails';\nimport { addClient } from '../../../redux/actions';\n\nconst mapStateToProps = (state, {clientId}) => ({\n  client: state.clients.find(c => c.id === clientId)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addClient: (client) => dispatch(addClient(client))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClientDetails);","import React, { useEffect } from 'react';\nimport { Popover, Typography } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { getById } from '../../../util/http/clients';\nimport titleCase from '../../../util/titleCase';\n\nexport default function ClientDetails({ client, clientId, addClient }) {\n  useEffect(() => {\n    (async () => {\n      if (!client) {\n        const resp = await getById({\n          clientId\n        });\n        if (resp && resp.data) {\n          addClient(resp.data);\n        }\n      }\n    })();\n  }, [client]);\n\n  if (!client) {\n    return null;\n  }\n\n  return (\n    <Popover\n      placement=\"bottomLeft\"\n      title=\"ID Number\"\n      content={\n        <Typography.Text>{client.idNumber}</Typography.Text>\n      }\n    >\n      <Link to={{\n        pathname: `/app/clients/${client.id}`\n      }}>\n        {titleCase(`${client.firstName} ${client.lastName[0]}`)}\n      </Link>\n    </Popover>\n  );\n}","import { connect } from 'react-redux';\n\nimport ApprovalBtn from '../../../pages/policies/parts/ApprovalBtn';\nimport { updatePolicy, addSuccess } from '../../../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  token: state.auth.token\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updatePolicy: (policy) => dispatch(updatePolicy(policy)),\n  addSuccess: (success) => dispatch(addSuccess(success))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ApprovalBtn);","import React, { useState } from 'react';\nimport {\n  Col,\n  Row,\n  Badge,\n  Button,\n  Typography\n} from 'antd';\nimport { ExceptionOutlined } from '@ant-design/icons';\n\nimport { approvePolicy } from '../../../util/http/policies';\n\nexport default function ApprovalBtn({ policy, updatePolicy, addSuccess, token }) {\n  const [loading, setLoading] = useState(false);\n\n  const onApprove = async () => {\n    setLoading(true);\n    try {\n      const resp = await approvePolicy({\n        policyId: policy.id,\n        token\n      });\n      if (resp && resp.data) {\n        updatePolicy(resp.data);\n        addSuccess('Policy has been approved');\n      }\n    } catch (error) {\n      console.log('ERROR', error);\n    }\n  };\n  return (\n    <Row style={{\n      margin: '2em auto 1em'\n    }}>\n      <Col xs={24} sm={8} span={5}\n        style={{\n          display: 'flex',\n          alignItems: 'center'\n        }}>\n        <Badge\n          dot\n          status=\"warning\" >\n          <ExceptionOutlined />\n        </Badge>\n        <Typography.Text\n          style={{ marginLeft: '0.5em' }}>\n          Not approved\n        </Typography.Text>\n      </Col>\n      <Col flex>\n        <Button type=\"primary\"\n          loading={loading}\n          onClick={onApprove}>\n          Approve\n        </Button>\n      </Col>\n    </Row>\n  );\n}","import React, { useEffect } from \"react\";\nimport { Col, Row, Typography } from \"antd\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport PolicyDetails from \"../../../containers/policies/parts/PolicyDetails\";\nimport ClientDetails from \"../../../containers/policies/parts/ClientDetails\";\nimport ApprovalBtn from \"../../../containers/policies/parts/ApprovalBtn\";\nimport ProfileContainer from \"../../../components/ProfileContainer\";\nimport ProfileSkeleton from \"../../../components/ProfileSkeleton\";\nimport Detail from \"../../../components/Detail\";\nimport { getById } from \"../../../util/http/policies\";\n\nconst { Text } = Typography;\n\nexport default function PolicyProfile({ policy, addPolicy }) {\n  const { policyId } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    (async () => {\n      if (!policy) {\n        const resp = await getById({\n          policyId,\n        });\n        if (resp && resp.data) {\n          addPolicy(resp.data);\n        } else {\n          history.push(\"/reports/applications\");\n        }\n      }\n    })();\n  }, [policy]);\n\n  if (!policy) {\n    return <ProfileSkeleton />;\n  }\n\n  return (\n    <ProfileContainer\n      label=\"Policy no\"\n      title={String(policy.policyNumber).toUpperCase()}\n      fallbackUrl=\"/app/reports/applications\"\n    >\n      <div\n        style={{\n          paddingLeft: \"1em\",\n          marginBottom: \"1.5em\",\n        }}\n      >\n        <Detail\n          title={\"Applied\"}\n          content={new Date(policy.createdAt).toLocaleDateString()}\n        />\n        <Detail title={\"Client\"}>\n          <ClientDetails clientId={policy.client} />\n        </Detail>\n        <Detail title={\"Class\"} content={policy.policyClass} />\n\n        {!policy.approved && <ApprovalBtn policy={policy} />}\n      </div>\n      <PolicyDetails\n        policyId={policy.id}\n        insurerId={policy.insurer}\n        policyClass={policy.policyClass}\n      />\n    </ProfileContainer>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport PolicyProfile from '../../../pages/policies/parts/PolicyProfile';\nimport { addPolicy } from '../../../redux/actions';\n\nconst mapStateToProps = (state, { policyId }) => ({\n  policy: state.policies.find(p => Number(p.id) === Number(policyId))\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPolicy: (policy) => dispatch(addPolicy(policy))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PolicyProfile);","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Profile from '../../components/Profile';\nimport PolicyProfile from '../../containers/policies/parts/PolicyProfile';\n\nexport default function Policy({ insurers }) {\n  const { policyId } = useParams();\n\n  return (\n    <Profile>\n      <PolicyProfile policyId={policyId} />\n    </Profile>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  useRouteMatch,\n  useLocation,\n} from 'react-router-dom';\nimport { Layout, Grid } from 'antd';\n\nimport OSider from '../components/OSider';\n\nimport OHeader from '../containers/common/Oheader';\nimport ClientList from '../containers/clients/ClientList';\nimport NewClientForm from '../containers/clients/NewClientForm';\nimport NewInsurerForm from '../containers/insurers/NewInsurer';\nimport InsurersList from '../containers/insurers/InsurersList';\nimport SelectInsurer from \"../containers/clients/SelectInsurer\";\nimport NewAdminForm from \"../containers/admins/NewAdminForm\";\nimport Applications from './Applications';\nimport { Insurer } from \"./insurers\";\nimport { Client } from './clients';\nimport { Policy } from './policies';\n\nconst { Content } = Layout;\nconst {useBreakpoint} = Grid;\n\nexport default function Main({ auth, addError }) {\n  const location = useLocation();\n  const { path } = useRouteMatch();\n  const [collapsed, setCollapsed] = useState(false);\n  const [open, setOpen] = useState(true);\n  const screens = useBreakpoint();\n\n  useEffect(() => {\n    if (!screens.md) {\n      setCollapsed(false);\n      setOpen(false);\n    }\n    \n    !auth?.token && addError('You need to login first');\n  }, [screens]);\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const toggleOpen = () => {\n    setOpen(!open);\n  };\n\n  if (!auth?.token) {\n    return <Redirect to={{\n      pathname: \"/login\",\n      state: {\n        attemptedRoute: location.pathname\n      }\n    }} />\n  }\n\n  return (\n    <Layout>\n      <OSider \n        collapsed={collapsed}\n        open={open} />\n      <Layout className=\"site-layout\">\n        <OHeader\n          collapsed={collapsed}\n          toggle={toggle}\n          open={open}\n          toggleOpen={toggleOpen} />\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: '8px 0 0',\n            padding: '0 24px 24px',\n            minHeight: 280,\n            position: 'relative',\n          }}\n        >\n          <Switch>\n            <Route exact path={`${path}/clients/new`}>\n              <SelectInsurer />\n            </Route>\n            <Route exact path={`${path}/clients/new/:insurerId`}>\n              <NewClientForm />\n            </Route>\n            <Route exact path={`${path}/clients/:clientId`}>\n              <Client />\n            </Route>\n            <Route path={`${path}/clients`}>\n              <ClientList />\n            </Route>\n            <Route exact path={`${path}/insurers/new`}>\n              <NewInsurerForm />\n            </Route>\n            <Route exact path={`${path}/insurers/:insurerId`}>\n              <Insurer />\n            </Route>\n            <Route path={`${path}/insurers`}>\n              <InsurersList />\n            </Route>\n            <Route path={`${path}/reports/applications`}>\n              <Applications />\n            </Route>\n            <Route path={`${path}/policies/:policyId`}>\n              <Policy />\n            </Route>\n            <Route path={`${path}/admins/new`}>\n              <NewAdminForm />\n            </Route>\n            <Route path=\"*\">\n              <Redirect to={`${path}/clients`} />\n            </Route>\n          </Switch>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}","import { connect } from 'react-redux'\n\nimport Main from '../pages/Main';\nimport { addError } from '../redux/actions';\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addError: (error) => dispatch(addError(error))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Main);"],"sourceRoot":""}