{"version":3,"sources":["components/PageTitle.js","components/Page.js","util/http/admins.js","util/http/helpers/handleError.js","util/http/constants.js","util/http/helpers/request.js","pages/admins/parts/AuthPage.js","pages/admins/parts/PasswordDetails.js","pages/admins/ChangePassword.js","pages/admins/parts/AdminDetails.js","pages/admins/NewAdminForm.js","pages/admins/parts/LoginDetails.js","pages/admins/Login.js","containers/admins/Login.js"],"names":["PageTitle","pageTitle","justify","Title","level","Page","children","style","padding","postAdmin","admin","a","newAdmin","firstName","middleName","lastName","email","idNumber","phoneNumber","addressNumber","addressCode","addressTown","request","url","method","body","headers","Authorization","token","login","password","changePassword","adminId","oldPassword","newPassword","newPasswordConfirm","handleError","error","console","log","store","dispatch","addError","process","NODE_ENV","SERVER_URL","API_URL","query","queryBody","constructUrlBody","requestUrl","fetch","JSON","stringify","resp","json","status","data","message","ulrBody","name","hasOwnProperty","value","toString","encodeURIComponent","replace","push","join","AuthPage","title","src","alt","margin","display","borderRadius","width","marginBottom","PasswordDetails","gutter","span","Item","label","rules","required","Password","pattern","dependencies","hasFeedback","getFieldValue","validator","rule","Promise","resolve","reject","ChangePassword","location","useLocation","useForm","form","useState","loading","setLoading","changeSuccess","setChangeSuccess","submitPassword","validateFields","values","state","resetFields","to","className","type","onClick","nameReg","AdminDetails","NewAdminForm","addSuccess","submitAdmin","LoginDetails","valuePropName","extra","defaultChecked","Login","auth","history","useHistory","loginAdmin","adminLogin","accState","pathname","id","rememberMe","attemptedRoute","connect","user"],"mappings":"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","file":"static/js/7.1ecbebd3.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Row, Typography } from 'antd';\n\nexport default function PageTitle({ pageTitle }) {\n  return(\n    <Row justify=\"center\">\n        <Col>\n          <Typography.Title\n            level={3}>\n              {pageTitle}\n          </Typography.Title>\n        </Col>\n      </Row>\n  );\n}\n","import React from 'react';\n\nimport PageTitle from './PageTitle';\n\nexport default function Page({ pageTitle, children }) {\n  return (\n    <section style={{\n      padding: '2.5em 0 1.5em'\n    }}>\n      {pageTitle &&\n        <PageTitle pageTitle={pageTitle} />\n      }\n      {children}\n    </section>\n  );\n}","import request from './helpers/request';\n\nconst BASE_URL = '/admins';\n\nexport async function postAdmin(admin) {\n  const newAdmin = function (admin) {\n    return {\n      firstName: admin.firstName,\n      middleName: admin.middleName,\n      lastName: admin.lastName,\n      email: admin.email,\n      idNumber: admin.idNumber,\n      phoneNumber: admin.phoneNumber,\n      addressNumber: admin.addressNumber,\n      addressCode: admin.addressCode,\n      addressTown: admin.addressTown,\n    };\n  }(admin);\n\n  return await request({\n    url: `${BASE_URL}/register`,\n    method: 'POST',\n    body: newAdmin,\n    headers: {\n      Authorization: `Bearer ${admin.token}`,\n    }\n  });\n}\n\nexport async function login({\n  email,\n  password\n}) {\n  return await request({\n    url: `${BASE_URL}/login`,\n    method: 'POST',\n    body: {\n      email,\n      password,\n    }\n  });\n}\n\nexport async function changePassword({\n  adminId,\n  oldPassword,\n  newPassword,\n  newPasswordConfirm\n}) {\n  return await request({\n    url: `${BASE_URL}/${adminId}/change-password`,\n    method: 'PUT',\n    body: {\n      oldPassword,\n      newPassword,\n      newPasswordConfirm\n    }\n  });\n}","import store from '../../../redux/store';\nimport { addError } from '../../../redux/actions';\n\nexport default function handleError(error) {\n  console.log('TODO: handle error', error);\n  store.dispatch(addError(error));\n  return null;\n}","const API_URL = 'http://localhost:4000/api/v1';\n\nexport {\n  API_URL\n};","import handleError from './handleError';\nimport { API_URL as api_url } from '../constants';\n\nconst { NODE_ENV, SERVER_URL } = process.env;\nconst API_URL = NODE_ENV === 'production' ? SERVER_URL : api_url;\n\nexport default async function request({\n  url, method, body, query, headers\n}) {\n  try {\n    const queryBody = constructUrlBody(query);\n    const requestUrl = `${API_URL}${url}?${queryBody}`\n    const resp = await fetch(requestUrl, {\n      method: method,\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers\n      },\n      body: JSON.stringify(body),\n    });\n\n    const { status, data, error } = await resp.json();\n    if (resp.status >= 500) {\n      return handleError(\"Uh oh, something's not right. Try again later.\");\n    }\n\n    if (resp.status >= 400 && error) {\n      return handleError(error);\n    }\n\n    return { status, data, error };\n  } catch (error) {\n    handleError(error.message);\n  }\n}\n\nfunction constructUrlBody(data) {\n  if (!data) {\n    return \"\";\n  }\n\n  let ulrBody = [];\n  for (let name in data) {\n    // skip inherited and functions\n    if (!data.hasOwnProperty(name) || typeof name === 'function') {\n      continue;\n    }\n    let value = data[name];\n    if (!value) {\n      continue; // skip null/undefined\n    }\n    value = value.toString();\n    name = encodeURIComponent(name.replace(' ', '+'));\n    value = encodeURIComponent(value.replace(' ', '+'));\n    ulrBody.push(`${name}=${value}`);\n  }\n\n  return ulrBody.join('&');\n}","import React from 'react';\nimport {\n  Col,\n  Row,\n  Typography,\n} from 'antd';\n\nimport Page from '../../../components/Page';\n\nexport default function AuthPage({title, children}) {\n  return (\n    <Page>\n      <Row justify=\"center\">\n        <Col>\n          <img src=\"orient-logo.png\" alt=\"Company logo\"\n            style={{\n              margin: '0 auto',\n              display: 'block',\n              borderRadius: '10%',\n              width: '75px',\n              marginBottom: '1em',\n            }} />\n          <Typography.Title level={3}>{title}</Typography.Title>\n        </Col>\n      </Row>\n      {children}\n    </Page>\n  );\n}","import React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n} from 'antd';\n\nexport default function PasswordDetails() {\n  return (\n    <Card>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Old password\"\n            name=\"oldPassword\"\n            rules={[\n              { required: true, message: 'Password is required' },\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"New password\"\n            name=\"newPassword\"\n            rules={[\n              { required: true, message: 'Password is required' },\n              { \n                pattern: /^(?=.*[a-z])(?=.*[A-Z])(?=^.{8,45}$)/,\n                message: `Password should contain numbers, letters and \n                at least 8 characters`\n              }\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Confirm new password\"\n            dependencies={['newPassword']}\n            hasFeedback\n            name=\"newPasswordConfirm\"\n            rules={[\n              { required: true, message: 'Password is required' },\n              ({getFieldValue}) => ({\n                validator(rule, value) {\n                  if (getFieldValue('newPassword') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject('Passwords do not match.');\n                }\n              })\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Button,\n  Col,\n  Form,\n  Row,\n} from 'antd';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport AuthPage from './parts/AuthPage';\nimport PasswordDetails from './parts/PasswordDetails';\nimport { changePassword } from '../../util/http/admins';\n\nimport '../Form.css';\n\nexport default function ChangePassword({ addError }) {\n  const location = useLocation();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [changeSuccess, setChangeSuccess] = useState(false);\n  const submitPassword = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await changePassword({\n        ...location?.state,\n        ...values,\n      });\n      if (resp && resp.data) {\n        form.resetFields();\n        setChangeSuccess(true);\n      } else if (resp && resp.error) {\n        addError(resp.error);\n      }\n    } catch (error) {\n      console.log('An error occurred', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AuthPage title=\"Change password\">\n      <Row justify=\"center\">\n        <Col span={6}>\n          {changeSuccess ?\n            <div>\n              Password change successful. Proceed to <Link to=\"/login\">login</Link>\n            </div> :\n            <Form className=\"OForm\"\n              form={form}>\n              <PasswordDetails />\n              <Row justify=\"space-between\">\n                <Link to=\"/login\">\n                  <Button type=\"link\">Login</Button>\n                </Link>\n                <Button\n                  type=\"primary\"\n                  onClick={submitPassword}\n                  loading={loading}>\n                  Submit\n              </Button>\n              </Row>\n            </Form>\n          }\n        </Col>\n      </Row>\n    </AuthPage>\n  );\n}","import React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n} from 'antd';\n\nconst nameReg = {\n  pattern: /^[a-zA-Z]{2,}$/,\n  message: 'Invalid value'\n};\n\nexport default function AdminDetails() {\n  return (\n    <Card\n      title=\"Admin details\">\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            name=\"firstName\"\n            label=\"First name\"\n            rules={[\n              {\n                required: true,\n                message: 'First name is required'\n              },\n              nameReg\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            name=\"middleName\"\n            label=\"Middle name\"\n            rules={[\n              nameReg\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            name=\"lastName\"\n            label=\"Last name\"\n            rules={[\n              {\n                required: true,\n                message: 'Last name is required'\n              },\n              nameReg\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"Address\"\n            name=\"addressNumber\"\n            rules={[\n              { required: true, message: 'Address number is required' },\n              {\n                pattern: /^[a-zA-Z0-9]{1,}$/,\n                message: 'Address number is invalid'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Postal code\"\n            name=\"addressCode\"\n            rules={[\n              { required: true, message: 'Postal code is required' },\n              {\n                pattern: /^\\d{1,}$/,\n                message: 'Postal code should be a number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Town\"\n            name=\"addressTown\"\n            rules={[\n              { required: true, message: 'Address town is required' },\n              {\n                pattern: /^[a-zA-Z]{2,}$/,\n                message: 'Town name is invalid'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col>\n          <Form.Item\n            label=\"ID/Passport number\"\n            name=\"idNumber\"\n            rules={[\n              { required: true, message: 'ID number is required' },\n              {\n                pattern: /^[0-9]{1,}$/,\n                message: 'ID/Passport should be a number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              { required: true, message: 'Email is required' },\n              { type: 'email', message: 'Invalid email' }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col>\n          <Form.Item\n            label=\"Phone number\"\n            name=\"phoneNumber\"\n            rules={[\n              { required: true, message: 'Phone number is required' },\n              {\n                pattern: /^0(7\\d{1}|20)\\d{7}$/,\n                message: 'Invalid phone number'\n              }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Col,\n  Form,\n  Button,\n  Row\n} from 'antd';\n\nimport AdminDetails from './parts/AdminDetails';\nimport Page from '../../components/Page';\n\nimport { postAdmin } from '../../util/http/admins';\n\nimport '../Form.css';\n\nexport default function NewAdminForm({ addSuccess, addError }) {\n  const pageTitle = \"Register new admin\";\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const submitAdmin = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await postAdmin(values);\n      if (resp && resp.data) {\n        addSuccess('Data submitted successfully');\n        form.resetFields();\n      } else if (resp && resp.error) {\n        addError(resp.error);\n      }\n    } catch (error) {\n      addError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Page pageTitle={pageTitle}>\n      <Row justify=\"center\">\n        <Col>\n          <Form className=\"OForm\"\n            form={form}>\n            <AdminDetails />\n            <Button\n              type=\"primary\"\n              onClick={submitAdmin}\n              loading={loading}>\n              Save\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Page>\n  );\n}","import React from 'react';\nimport {\n  Card,\n  Col,\n  Form,\n  Input,\n  Row,\n  Checkbox,\n} from 'antd';\n\nexport default function LoginDetails() {\n  return (\n    <Card>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[\n              { required: true, message: 'Email is required' },\n              { type: 'email', message: 'Invalid email' }\n            ]}>\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={24}>\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              { required: true, message: 'Password is required' },\n              // { pattern: /^$/, message: 'Password should contain numbers and letters' }\n            ]}>\n            <Input.Password />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Form.Item\n        name=\"rememberMe\"\n        valuePropName=\"checked\"\n        extra={<span>Remember me</span>}\n        className=\"RememberMeInput\"\n      >\n        <Checkbox defaultChecked={false} />\n      </Form.Item>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport {\n  Col,\n  Form,\n  Button,\n  Row,\n} from 'antd';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport AuthPage from './parts/AuthPage';\nimport LoginDetails from './parts/LoginDetails';\n\nimport { login as adminLogin } from '../../util/http/admins';\n\nimport '../Form.css';\n\nexport default function Login({ login, addError, auth }) {\n  const history = useHistory();\n  const location = useLocation();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const loginAdmin = async () => {\n    setLoading(true);\n    try {\n      const values = await form.validateFields();\n      const resp = await adminLogin(values);\n      if (resp && resp.error) {\n        if (resp.error?.accState === 'NEEDS_RESET') {\n          addError('You need to change your password');\n          history.push({\n            pathname: '/change-password',\n            state: {\n              adminId: resp.error.id\n            }\n          });\n        } else {\n          addError(resp.error);\n        }\n      } else if (resp && resp.data) {\n        form.resetFields();\n        login({\n          rememberMe: values.rememberMe,\n          ...resp.data\n        });\n        history.push(location?.state?.attemptedRoute || '/app');\n      }\n    } catch (error) {\n      console.log('An error occurred', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!!auth?.token) {\n    return <Redirect to=\"/app\" />\n  }\n\n  return (\n    <AuthPage title=\"Admin login\">\n      <Row justify=\"center\">\n        <Col span={6}>\n          <Form className=\"OForm\"\n            form={form}>\n            <LoginDetails />\n            <Button\n              type=\"primary\"\n              onClick={loginAdmin}\n              loading={loading}>\n              Log in\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </AuthPage>\n  );\n}","import { connect } from 'react-redux';\n\nimport { Login } from '../../pages/admins';\nimport { login, addError } from '../../redux/actions';\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (user) => dispatch(login(user)),\n  addError: (error) => dispatch(addError(error)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);"],"sourceRoot":""}